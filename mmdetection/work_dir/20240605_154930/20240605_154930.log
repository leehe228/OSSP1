2024/06/05 15:49:30 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
    CUDA available: False
    MUSA available: False
    numpy_random_seed: 996536374
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.0+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 996536374
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/06/05 15:49:30 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=True)
backend_args = None
classes = ('tooth', )
data_root = '/home/dmsai2/mmdetection/data/tooth/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=True, interval=8, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=1,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.02, type='AdamW', weight_decay=0.0001),
    type='OptimWrapper')
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/val/'),
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=128, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=16,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/train.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/train/'),
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(cutout_shape=(
                32,
                32,
            ), n_holes=5, type='CutOut'),
            dict(type='RandomAffine'),
            dict(prob=0.5, type='Rotate'),
            dict(prob=0.5, type='TranslateX'),
            dict(prob=0.5, type='TranslateY'),
            dict(prob=0.5, type='Brightness'),
            dict(prob=0.5, type='Contrast'),
            dict(prob=0.3, type='Solarize'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(cutout_shape=(
        32,
        32,
    ), n_holes=5, type='CutOut'),
    dict(type='RandomAffine'),
    dict(prob=0.5, type='Rotate'),
    dict(prob=0.5, type='TranslateX'),
    dict(prob=0.5, type='TranslateY'),
    dict(prob=0.5, type='Brightness'),
    dict(prob=0.5, type='Contrast'),
    dict(prob=0.3, type='Solarize'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/val/'),
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '/home/dmsai2/mmdetection/work_dir/'

2024/06/05 15:49:31 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/06/05 15:49:31 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/06/05 15:49:32 - mmengine - INFO - LR is set based on batch size of 16 and the current batch size is 16. Scaling the original LR by 1.0.
2024/06/05 15:49:32 - mmengine - INFO - load model from: torchvision://resnet50
2024/06/05 15:49:32 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2024/06/05 15:49:32 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2024/06/05 15:49:32 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/06/05 15:49:32 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/06/05 15:49:32 - mmengine - INFO - Checkpoints will be saved to /home/dmsai2/mmdetection/work_dir.
2024/06/05 15:52:17 - mmengine - INFO - Epoch(train)   [1][ 50/129]  lr: 2.0000e-02  eta: 15:00:31  time: 3.2822  data_time: 0.0232  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 15:54:43 - mmengine - INFO - Epoch(train)   [1][100/129]  lr: 2.0000e-02  eta: 14:10:15  time: 2.9347  data_time: 0.0149  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 15:56:07 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 15:56:20 - mmengine - INFO - Epoch(val)   [1][50/68]    eta: 0:00:04  time: 0.2572  data_time: 0.0050  
2024/06/05 15:56:24 - mmengine - INFO - Evaluating bbox...
2024/06/05 15:56:24 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 15:56:24 - mmengine - INFO - Epoch(val) [1][68/68]    data_time: 0.0045  time: 0.2488
2024/06/05 15:56:24 - mmengine - WARNING - Since `metrics` is an empty dict, the behavior to save the best checkpoint will be skipped in this evaluation.
2024/06/05 15:58:51 - mmengine - INFO - Epoch(train)   [2][ 50/129]  lr: 2.0000e-02  eta: 13:43:41  time: 2.9397  data_time: 0.0166  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:01:18 - mmengine - INFO - Epoch(train)   [2][100/129]  lr: 2.0000e-02  eta: 13:36:09  time: 2.9412  data_time: 0.0123  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:02:42 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:02:54 - mmengine - INFO - Epoch(val)   [2][50/68]    eta: 0:00:04  time: 0.2462  data_time: 0.0029  
2024/06/05 16:02:58 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:02:58 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:02:58 - mmengine - INFO - Epoch(val) [2][68/68]    data_time: 0.0029  time: 0.2341
2024/06/05 16:05:22 - mmengine - INFO - Epoch(train)   [3][ 50/129]  lr: 2.0000e-02  eta: 13:24:10  time: 2.8913  data_time: 0.0202  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:07:49 - mmengine - INFO - Epoch(train)   [3][100/129]  lr: 2.0000e-02  eta: 13:20:05  time: 2.9350  data_time: 0.0128  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:09:13 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:09:25 - mmengine - INFO - Epoch(val)   [3][50/68]    eta: 0:00:04  time: 0.2461  data_time: 0.0029  
2024/06/05 16:09:29 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:09:29 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:09:29 - mmengine - INFO - Epoch(val) [3][68/68]    data_time: 0.0029  time: 0.2339
2024/06/05 16:11:56 - mmengine - INFO - Epoch(train)   [4][ 50/129]  lr: 2.0000e-02  eta: 13:13:36  time: 2.9397  data_time: 0.0171  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:14:23 - mmengine - INFO - Epoch(train)   [4][100/129]  lr: 2.0000e-02  eta: 13:10:38  time: 2.9441  data_time: 0.0133  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:15:46 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:15:59 - mmengine - INFO - Epoch(val)   [4][50/68]    eta: 0:00:04  time: 0.2464  data_time: 0.0029  
2024/06/05 16:16:02 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:16:02 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:16:02 - mmengine - INFO - Epoch(val) [4][68/68]    data_time: 0.0028  time: 0.2339
2024/06/05 16:18:29 - mmengine - INFO - Epoch(train)   [5][ 50/129]  lr: 2.0000e-02  eta: 13:05:03  time: 2.9386  data_time: 0.0205  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:20:54 - mmengine - INFO - Epoch(train)   [5][100/129]  lr: 2.0000e-02  eta: 13:01:21  time: 2.8966  data_time: 0.0123  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:22:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:22:30 - mmengine - INFO - Epoch(val)   [5][50/68]    eta: 0:00:04  time: 0.2466  data_time: 0.0029  
2024/06/05 16:22:34 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:22:34 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:22:34 - mmengine - INFO - Epoch(val) [5][68/68]    data_time: 0.0029  time: 0.2343
2024/06/05 16:25:00 - mmengine - INFO - Epoch(train)   [6][ 50/129]  lr: 2.0000e-02  eta: 12:56:25  time: 2.9310  data_time: 0.0183  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:27:25 - mmengine - INFO - Epoch(train)   [6][100/129]  lr: 2.0000e-02  eta: 12:53:01  time: 2.8913  data_time: 0.0120  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:28:47 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:28:59 - mmengine - INFO - Epoch(val)   [6][50/68]    eta: 0:00:04  time: 0.2473  data_time: 0.0030  
2024/06/05 16:29:03 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:29:03 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:29:03 - mmengine - INFO - Epoch(val) [6][68/68]    data_time: 0.0029  time: 0.2348
2024/06/05 16:31:29 - mmengine - INFO - Epoch(train)   [7][ 50/129]  lr: 2.0000e-02  eta: 12:47:45  time: 2.9218  data_time: 0.0179  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:33:56 - mmengine - INFO - Epoch(train)   [7][100/129]  lr: 2.0000e-02  eta: 12:45:15  time: 2.9328  data_time: 0.0121  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:35:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:35:30 - mmengine - INFO - Epoch(val)   [7][50/68]    eta: 0:00:04  time: 0.2461  data_time: 0.0033  
2024/06/05 16:35:34 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:35:34 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:35:34 - mmengine - INFO - Epoch(val) [7][68/68]    data_time: 0.0032  time: 0.2363
2024/06/05 16:38:00 - mmengine - INFO - Epoch(train)   [8][ 50/129]  lr: 2.0000e-02  eta: 12:40:24  time: 2.9280  data_time: 0.0176  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:40:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:40:27 - mmengine - INFO - Epoch(train)   [8][100/129]  lr: 2.0000e-02  eta: 12:38:05  time: 2.9412  data_time: 0.0134  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:41:51 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:41:51 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/06/05 16:41:51 - mmengine - WARNING - `save_param_scheduler` is True but `self.param_schedulers` is None, so skip saving parameter schedulers
2024/06/05 16:42:04 - mmengine - INFO - Epoch(val)   [8][50/68]    eta: 0:00:04  time: 0.2463  data_time: 0.0029  
2024/06/05 16:42:08 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:42:08 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:42:08 - mmengine - INFO - Epoch(val) [8][68/68]    data_time: 0.0029  time: 0.2346
2024/06/05 16:44:31 - mmengine - INFO - Epoch(train)   [9][ 50/129]  lr: 2.0000e-02  eta: 12:33:08  time: 2.8691  data_time: 0.0197  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:46:57 - mmengine - INFO - Epoch(train)   [9][100/129]  lr: 2.0000e-02  eta: 12:30:39  time: 2.9242  data_time: 0.0156  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:48:21 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:48:33 - mmengine - INFO - Epoch(val)   [9][50/68]    eta: 0:00:04  time: 0.2467  data_time: 0.0031  
2024/06/05 16:48:37 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:48:37 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:48:37 - mmengine - INFO - Epoch(val) [9][68/68]    data_time: 0.0030  time: 0.2343
2024/06/05 16:51:03 - mmengine - INFO - Epoch(train)  [10][ 50/129]  lr: 2.0000e-02  eta: 12:26:22  time: 2.9145  data_time: 0.0187  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:53:27 - mmengine - INFO - Epoch(train)  [10][100/129]  lr: 2.0000e-02  eta: 12:23:31  time: 2.8859  data_time: 0.0123  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 16:54:51 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 16:55:03 - mmengine - INFO - Epoch(val)  [10][50/68]    eta: 0:00:04  time: 0.2469  data_time: 0.0030  
2024/06/05 16:55:07 - mmengine - INFO - Evaluating bbox...
2024/06/05 16:55:07 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 16:55:07 - mmengine - INFO - Epoch(val) [10][68/68]    data_time: 0.0029  time: 0.2343
2024/06/05 16:57:34 - mmengine - INFO - Epoch(train)  [11][ 50/129]  lr: 2.0000e-02  eta: 12:19:37  time: 2.9412  data_time: 0.0179  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:00:00 - mmengine - INFO - Epoch(train)  [11][100/129]  lr: 2.0000e-02  eta: 12:17:07  time: 2.9181  data_time: 0.0124  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:01:23 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:01:35 - mmengine - INFO - Epoch(val)  [11][50/68]    eta: 0:00:04  time: 0.2468  data_time: 0.0029  
2024/06/05 17:01:39 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:01:39 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:01:39 - mmengine - INFO - Epoch(val) [11][68/68]    data_time: 0.0029  time: 0.2342
2024/06/05 17:04:05 - mmengine - INFO - Epoch(train)  [12][ 50/129]  lr: 2.0000e-02  eta: 12:13:00  time: 2.9341  data_time: 0.0196  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:06:31 - mmengine - INFO - Epoch(train)  [12][100/129]  lr: 2.0000e-02  eta: 12:10:33  time: 2.9205  data_time: 0.0124  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:07:54 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:08:06 - mmengine - INFO - Epoch(val)  [12][50/68]    eta: 0:00:04  time: 0.2484  data_time: 0.0030  
2024/06/05 17:08:10 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:08:10 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:08:10 - mmengine - INFO - Epoch(val) [12][68/68]    data_time: 0.0029  time: 0.2359
2024/06/05 17:10:36 - mmengine - INFO - Epoch(train)  [13][ 50/129]  lr: 2.0000e-02  eta: 12:06:16  time: 2.9182  data_time: 0.0155  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:13:01 - mmengine - INFO - Epoch(train)  [13][100/129]  lr: 2.0000e-02  eta: 12:03:46  time: 2.9129  data_time: 0.0106  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:14:24 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:14:36 - mmengine - INFO - Epoch(val)  [13][50/68]    eta: 0:00:04  time: 0.2485  data_time: 0.0030  
2024/06/05 17:14:40 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:14:40 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:14:40 - mmengine - INFO - Epoch(val) [13][68/68]    data_time: 0.0029  time: 0.2361
2024/06/05 17:17:08 - mmengine - INFO - Epoch(train)  [14][ 50/129]  lr: 2.0000e-02  eta: 11:59:48  time: 2.9524  data_time: 0.0159  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:19:34 - mmengine - INFO - Epoch(train)  [14][100/129]  lr: 2.0000e-02  eta: 11:57:23  time: 2.9236  data_time: 0.0108  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:20:56 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:21:09 - mmengine - INFO - Epoch(val)  [14][50/68]    eta: 0:00:04  time: 0.2471  data_time: 0.0029  
2024/06/05 17:21:12 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:21:12 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:21:12 - mmengine - INFO - Epoch(val) [14][68/68]    data_time: 0.0029  time: 0.2356
2024/06/05 17:23:39 - mmengine - INFO - Epoch(train)  [15][ 50/129]  lr: 2.0000e-02  eta: 11:53:17  time: 2.9245  data_time: 0.0161  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:26:07 - mmengine - INFO - Epoch(train)  [15][100/129]  lr: 2.0000e-02  eta: 11:51:08  time: 2.9642  data_time: 0.0106  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:27:30 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:27:42 - mmengine - INFO - Epoch(val)  [15][50/68]    eta: 0:00:04  time: 0.2470  data_time: 0.0029  
2024/06/05 17:27:46 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:27:46 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:27:46 - mmengine - INFO - Epoch(val) [15][68/68]    data_time: 0.0029  time: 0.2353
2024/06/05 17:30:11 - mmengine - INFO - Epoch(train)  [16][ 50/129]  lr: 2.0000e-02  eta: 11:46:56  time: 2.8936  data_time: 0.0186  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:30:55 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:32:38 - mmengine - INFO - Epoch(train)  [16][100/129]  lr: 2.0000e-02  eta: 11:44:34  time: 2.9327  data_time: 0.0106  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:34:02 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:34:02 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/06/05 17:34:16 - mmengine - INFO - Epoch(val)  [16][50/68]    eta: 0:00:04  time: 0.2490  data_time: 0.0030  
2024/06/05 17:34:19 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:34:19 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:34:19 - mmengine - INFO - Epoch(val) [16][68/68]    data_time: 0.0029  time: 0.2372
2024/06/05 17:36:48 - mmengine - INFO - Epoch(train)  [17][ 50/129]  lr: 2.0000e-02  eta: 11:40:59  time: 2.9637  data_time: 0.0161  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:39:14 - mmengine - INFO - Epoch(train)  [17][100/129]  lr: 2.0000e-02  eta: 11:38:35  time: 2.9266  data_time: 0.0106  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:40:37 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:40:50 - mmengine - INFO - Epoch(val)  [17][50/68]    eta: 0:00:04  time: 0.2488  data_time: 0.0033  
2024/06/05 17:40:53 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:40:53 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:40:53 - mmengine - INFO - Epoch(val) [17][68/68]    data_time: 0.0032  time: 0.2367
2024/06/05 17:43:20 - mmengine - INFO - Epoch(train)  [18][ 50/129]  lr: 2.0000e-02  eta: 11:34:39  time: 2.9305  data_time: 0.0156  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:45:47 - mmengine - INFO - Epoch(train)  [18][100/129]  lr: 2.0000e-02  eta: 11:32:19  time: 2.9395  data_time: 0.0104  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:47:11 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:47:24 - mmengine - INFO - Epoch(val)  [18][50/68]    eta: 0:00:04  time: 0.2477  data_time: 0.0030  
2024/06/05 17:47:27 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:47:27 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:47:27 - mmengine - INFO - Epoch(val) [18][68/68]    data_time: 0.0029  time: 0.2355
2024/06/05 17:49:53 - mmengine - INFO - Epoch(train)  [19][ 50/129]  lr: 2.0000e-02  eta: 11:28:24  time: 2.9141  data_time: 0.0164  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:52:20 - mmengine - INFO - Epoch(train)  [19][100/129]  lr: 2.0000e-02  eta: 11:26:04  time: 2.9426  data_time: 0.0104  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:53:43 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 17:53:56 - mmengine - INFO - Epoch(val)  [19][50/68]    eta: 0:00:04  time: 0.2472  data_time: 0.0033  
2024/06/05 17:53:59 - mmengine - INFO - Evaluating bbox...
2024/06/05 17:53:59 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 17:53:59 - mmengine - INFO - Epoch(val) [19][68/68]    data_time: 0.0032  time: 0.2350
2024/06/05 17:56:27 - mmengine - INFO - Epoch(train)  [20][ 50/129]  lr: 2.0000e-02  eta: 11:22:13  time: 2.9524  data_time: 0.0223  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 17:58:54 - mmengine - INFO - Epoch(train)  [20][100/129]  lr: 2.0000e-02  eta: 11:19:53  time: 2.9464  data_time: 0.0164  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:00:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 18:00:30 - mmengine - INFO - Epoch(val)  [20][50/68]    eta: 0:00:04  time: 0.2466  data_time: 0.0029  
2024/06/05 18:00:34 - mmengine - INFO - Evaluating bbox...
2024/06/05 18:00:34 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 18:00:34 - mmengine - INFO - Epoch(val) [20][68/68]    data_time: 0.0029  time: 0.2346
2024/06/05 18:03:00 - mmengine - INFO - Epoch(train)  [21][ 50/129]  lr: 2.0000e-02  eta: 11:15:57  time: 2.9309  data_time: 0.0207  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:05:29 - mmengine - INFO - Epoch(train)  [21][100/129]  lr: 2.0000e-02  eta: 11:13:43  time: 2.9665  data_time: 0.0131  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:06:53 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 18:07:05 - mmengine - INFO - Epoch(val)  [21][50/68]    eta: 0:00:04  time: 0.2479  data_time: 0.0030  
2024/06/05 18:07:09 - mmengine - INFO - Evaluating bbox...
2024/06/05 18:07:09 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 18:07:09 - mmengine - INFO - Epoch(val) [21][68/68]    data_time: 0.0029  time: 0.2357
2024/06/05 18:09:36 - mmengine - INFO - Epoch(train)  [22][ 50/129]  lr: 2.0000e-02  eta: 11:09:55  time: 2.9418  data_time: 0.0155  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:12:03 - mmengine - INFO - Epoch(train)  [22][100/129]  lr: 2.0000e-02  eta: 11:07:34  time: 2.9431  data_time: 0.0128  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:13:26 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 18:13:39 - mmengine - INFO - Epoch(val)  [22][50/68]    eta: 0:00:04  time: 0.2490  data_time: 0.0030  
2024/06/05 18:13:43 - mmengine - INFO - Evaluating bbox...
2024/06/05 18:13:43 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 18:13:43 - mmengine - INFO - Epoch(val) [22][68/68]    data_time: 0.0030  time: 0.2362
2024/06/05 18:16:10 - mmengine - INFO - Epoch(train)  [23][ 50/129]  lr: 2.0000e-02  eta: 11:03:39  time: 2.9417  data_time: 0.0222  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:18:38 - mmengine - INFO - Epoch(train)  [23][100/129]  lr: 2.0000e-02  eta: 11:01:22  time: 2.9628  data_time: 0.0137  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:20:00 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 18:20:13 - mmengine - INFO - Epoch(val)  [23][50/68]    eta: 0:00:04  time: 0.2476  data_time: 0.0030  
2024/06/05 18:20:16 - mmengine - INFO - Evaluating bbox...
2024/06/05 18:20:16 - mmengine - ERROR - /home/dmsai2/mmdetection/mmdet/evaluation/metrics/coco_metric.py - compute_metrics - 465 - The testing results of the whole dataset is empty.
2024/06/05 18:20:16 - mmengine - INFO - Epoch(val) [23][68/68]    data_time: 0.0029  time: 0.2351
2024/06/05 18:21:55 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240605_154930
2024/06/05 18:22:44 - mmengine - INFO - Epoch(train)  [24][ 50/129]  lr: 2.0000e-02  eta: 10:57:27  time: 2.9527  data_time: 0.0147  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan
2024/06/05 18:25:12 - mmengine - INFO - Epoch(train)  [24][100/129]  lr: 2.0000e-02  eta: 10:55:08  time: 2.9539  data_time: 0.0132  loss: nan  loss_rpn_cls: nan  loss_rpn_bbox: nan  loss_cls: nan  acc: 100.0000  loss_bbox: nan

2024/06/07 09:54:06 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 949496526
    GPU 0: NVIDIA GeForce RTX 3070
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.0+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 949496526
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/06/07 09:54:06 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=True)
backend_args = None
classes = ('tooth', )
data_root = '/home/dmsai2/mmdetection/data/tooth/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=True, interval=8, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=50,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet50', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=1,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.001, type='AdamW', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=36,
        gamma=0.1,
        milestones=[
            16,
            22,
            36,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=2,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/test.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/test/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=36, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=16,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/train.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/train/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(cutout_shape=(
                32,
                32,
            ), n_holes=5, type='CutOut'),
            dict(type='RandomAffine'),
            dict(prob=0.5, type='Rotate'),
            dict(prob=0.5, type='TranslateX'),
            dict(prob=0.5, type='TranslateY'),
            dict(prob=0.5, type='Brightness'),
            dict(prob=0.5, type='Contrast'),
            dict(prob=0.3, type='Solarize'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(cutout_shape=(
        32,
        32,
    ), n_holes=5, type='CutOut'),
    dict(type='RandomAffine'),
    dict(prob=0.5, type='Rotate'),
    dict(prob=0.5, type='TranslateX'),
    dict(prob=0.5, type='TranslateY'),
    dict(prob=0.5, type='Brightness'),
    dict(prob=0.5, type='Contrast'),
    dict(prob=0.3, type='Solarize'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/val/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '/home/dmsai2/mmdetection/work_dir/'

2024/06/07 09:54:07 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/06/07 09:54:07 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/06/07 09:54:08 - mmengine - INFO - LR is set based on batch size of 16 and the current batch size is 16. Scaling the original LR by 1.0.
2024/06/07 09:54:08 - mmengine - INFO - load model from: torchvision://resnet50
2024/06/07 09:54:08 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet50
2024/06/07 09:54:09 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet50 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2024/06/07 09:54:09 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/06/07 09:54:09 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/06/07 09:54:09 - mmengine - INFO - Checkpoints will be saved to /home/dmsai2/mmdetection/work_dir.
2024/06/07 09:54:27 - mmengine - INFO - Epoch(train)  [1][ 50/129]  lr: 9.9098e-05  eta: 0:27:46  time: 0.3628  data_time: 0.0218  memory: 2346  loss: nan  loss_rpn_cls: 0.4188  loss_rpn_bbox: 0.0826  loss_cls: 0.3473  acc: 86.3892  loss_bbox: nan
2024/06/07 09:54:43 - mmengine - INFO - Epoch(train)  [1][100/129]  lr: 1.9920e-04  eta: 0:25:50  time: 0.3198  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.1737  loss_rpn_bbox: 0.0678  loss_cls: 0.3453  acc: 84.6924  loss_bbox: nan
2024/06/07 09:54:52 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:54:56 - mmengine - INFO - Epoch(val)  [1][50/68]    eta: 0:00:01  time: 0.0753  data_time: 0.0258  memory: 2346  
2024/06/07 09:54:57 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:55:01 - mmengine - INFO - bbox_mAP_copypaste: 0.119 0.376 0.034 0.062 0.156 0.131
2024/06/07 09:55:01 - mmengine - INFO - Epoch(val) [1][68/68]    coco/bbox_mAP: 0.1190  coco/bbox_mAP_50: 0.3760  coco/bbox_mAP_75: 0.0340  coco/bbox_mAP_s: 0.0620  coco/bbox_mAP_m: 0.1560  coco/bbox_mAP_l: 0.1310  data_time: 0.0197  time: 0.0685
2024/06/07 09:55:17 - mmengine - INFO - Epoch(train)  [2][ 50/129]  lr: 3.5736e-04  eta: 0:24:46  time: 0.3249  data_time: 0.0173  memory: 2346  loss: nan  loss_rpn_cls: 0.1277  loss_rpn_bbox: 0.0630  loss_cls: 0.2992  acc: 86.3892  loss_bbox: nan
2024/06/07 09:55:33 - mmengine - INFO - Epoch(train)  [2][100/129]  lr: 4.5746e-04  eta: 0:24:14  time: 0.3178  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.1134  loss_rpn_bbox: 0.0576  loss_cls: 0.2634  acc: 89.4653  loss_bbox: nan
2024/06/07 09:55:42 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:55:45 - mmengine - INFO - Epoch(val)  [2][50/68]    eta: 0:00:01  time: 0.0700  data_time: 0.0267  memory: 2346  
2024/06/07 09:55:46 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:55:49 - mmengine - INFO - bbox_mAP_copypaste: 0.177 0.592 0.017 0.130 0.170 0.205
2024/06/07 09:55:49 - mmengine - INFO - Epoch(val) [2][68/68]    coco/bbox_mAP: 0.1770  coco/bbox_mAP_50: 0.5920  coco/bbox_mAP_75: 0.0170  coco/bbox_mAP_s: 0.1300  coco/bbox_mAP_m: 0.1700  coco/bbox_mAP_l: 0.2050  data_time: 0.0201  time: 0.0643
2024/06/07 09:56:05 - mmengine - INFO - Epoch(train)  [3][ 50/129]  lr: 6.1562e-04  eta: 0:23:43  time: 0.3309  data_time: 0.0211  memory: 2346  loss: nan  loss_rpn_cls: 0.1048  loss_rpn_bbox: 0.0560  loss_cls: 0.2552  acc: 88.5254  loss_bbox: nan
2024/06/07 09:56:21 - mmengine - INFO - Epoch(train)  [3][100/129]  lr: 7.1572e-04  eta: 0:23:21  time: 0.3188  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.1058  loss_rpn_bbox: 0.0594  loss_cls: 0.2473  acc: 89.5996  loss_bbox: nan
2024/06/07 09:56:30 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:56:34 - mmengine - INFO - Epoch(val)  [3][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0279  memory: 2346  
2024/06/07 09:56:35 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:56:38 - mmengine - INFO - bbox_mAP_copypaste: 0.181 0.564 0.024 0.104 0.221 0.200
2024/06/07 09:56:38 - mmengine - INFO - Epoch(val) [3][68/68]    coco/bbox_mAP: 0.1810  coco/bbox_mAP_50: 0.5640  coco/bbox_mAP_75: 0.0240  coco/bbox_mAP_s: 0.1040  coco/bbox_mAP_m: 0.2210  coco/bbox_mAP_l: 0.2000  data_time: 0.0210  time: 0.0631
2024/06/07 09:56:54 - mmengine - INFO - Epoch(train)  [4][ 50/129]  lr: 8.7387e-04  eta: 0:22:48  time: 0.3200  data_time: 0.0154  memory: 2346  loss: nan  loss_rpn_cls: 0.1030  loss_rpn_bbox: 0.0610  loss_cls: 0.2520  acc: 88.9526  loss_bbox: nan
2024/06/07 09:57:10 - mmengine - INFO - Epoch(train)  [4][100/129]  lr: 9.7397e-04  eta: 0:22:28  time: 0.3154  data_time: 0.0102  memory: 2346  loss: nan  loss_rpn_cls: 0.0975  loss_rpn_bbox: 0.0585  loss_cls: 0.2386  acc: 92.5293  loss_bbox: nan
2024/06/07 09:57:19 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:57:22 - mmengine - INFO - Epoch(val)  [4][50/68]    eta: 0:00:01  time: 0.0704  data_time: 0.0292  memory: 2346  
2024/06/07 09:57:23 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:57:25 - mmengine - INFO - bbox_mAP_copypaste: 0.273 0.691 0.100 0.175 0.258 0.322
2024/06/07 09:57:25 - mmengine - INFO - Epoch(val) [4][68/68]    coco/bbox_mAP: 0.2730  coco/bbox_mAP_50: 0.6910  coco/bbox_mAP_75: 0.1000  coco/bbox_mAP_s: 0.1750  coco/bbox_mAP_m: 0.2580  coco/bbox_mAP_l: 0.3220  data_time: 0.0219  time: 0.0626
2024/06/07 09:57:41 - mmengine - INFO - Epoch(train)  [5][ 50/129]  lr: 1.0000e-03  eta: 0:21:57  time: 0.3189  data_time: 0.0140  memory: 2346  loss: nan  loss_rpn_cls: 0.0951  loss_rpn_bbox: 0.0553  loss_cls: 0.2332  acc: 91.3452  loss_bbox: nan
2024/06/07 09:57:57 - mmengine - INFO - Epoch(train)  [5][100/129]  lr: 1.0000e-03  eta: 0:21:38  time: 0.3149  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0872  loss_rpn_bbox: 0.0531  loss_cls: 0.2219  acc: 91.1621  loss_bbox: nan
2024/06/07 09:58:06 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:58:09 - mmengine - INFO - Epoch(val)  [5][50/68]    eta: 0:00:01  time: 0.0693  data_time: 0.0294  memory: 2346  
2024/06/07 09:58:10 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:58:12 - mmengine - INFO - bbox_mAP_copypaste: 0.290 0.687 0.155 0.177 0.280 0.341
2024/06/07 09:58:12 - mmengine - INFO - Epoch(val) [5][68/68]    coco/bbox_mAP: 0.2900  coco/bbox_mAP_50: 0.6870  coco/bbox_mAP_75: 0.1550  coco/bbox_mAP_s: 0.1770  coco/bbox_mAP_m: 0.2800  coco/bbox_mAP_l: 0.3410  data_time: 0.0221  time: 0.0616
2024/06/07 09:58:28 - mmengine - INFO - Epoch(train)  [6][ 50/129]  lr: 1.0000e-03  eta: 0:21:11  time: 0.3230  data_time: 0.0155  memory: 2346  loss: nan  loss_rpn_cls: 0.0908  loss_rpn_bbox: 0.0515  loss_cls: 0.2247  acc: 93.2495  loss_bbox: nan
2024/06/07 09:58:44 - mmengine - INFO - Epoch(train)  [6][100/129]  lr: 1.0000e-03  eta: 0:20:53  time: 0.3150  data_time: 0.0108  memory: 2346  loss: nan  loss_rpn_cls: 0.0876  loss_rpn_bbox: 0.0523  loss_cls: 0.2174  acc: 91.9312  loss_bbox: nan
2024/06/07 09:58:53 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:58:56 - mmengine - INFO - Epoch(val)  [6][50/68]    eta: 0:00:01  time: 0.0706  data_time: 0.0277  memory: 2346  
2024/06/07 09:58:57 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:58:59 - mmengine - INFO - bbox_mAP_copypaste: 0.232 0.634 0.086 0.134 0.250 0.264
2024/06/07 09:58:59 - mmengine - INFO - Epoch(val) [6][68/68]    coco/bbox_mAP: 0.2320  coco/bbox_mAP_50: 0.6340  coco/bbox_mAP_75: 0.0860  coco/bbox_mAP_s: 0.1340  coco/bbox_mAP_m: 0.2500  coco/bbox_mAP_l: 0.2640  data_time: 0.0209  time: 0.0633
2024/06/07 09:59:16 - mmengine - INFO - Epoch(train)  [7][ 50/129]  lr: 1.0000e-03  eta: 0:20:28  time: 0.3291  data_time: 0.0211  memory: 2346  loss: nan  loss_rpn_cls: 0.0873  loss_rpn_bbox: 0.0511  loss_cls: 0.2224  acc: 90.9180  loss_bbox: nan
2024/06/07 09:59:32 - mmengine - INFO - Epoch(train)  [7][100/129]  lr: 1.0000e-03  eta: 0:20:12  time: 0.3220  data_time: 0.0127  memory: 2346  loss: nan  loss_rpn_cls: 0.0837  loss_rpn_bbox: 0.0512  loss_cls: 0.2189  acc: 88.7451  loss_bbox: nan
2024/06/07 09:59:41 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 09:59:45 - mmengine - INFO - Epoch(val)  [7][50/68]    eta: 0:00:01  time: 0.0706  data_time: 0.0278  memory: 2346  
2024/06/07 09:59:46 - mmengine - INFO - Evaluating bbox...
2024/06/07 09:59:47 - mmengine - INFO - bbox_mAP_copypaste: 0.285 0.712 0.122 0.190 0.231 0.344
2024/06/07 09:59:47 - mmengine - INFO - Epoch(val) [7][68/68]    coco/bbox_mAP: 0.2850  coco/bbox_mAP_50: 0.7120  coco/bbox_mAP_75: 0.1220  coco/bbox_mAP_s: 0.1900  coco/bbox_mAP_m: 0.2310  coco/bbox_mAP_l: 0.3440  data_time: 0.0209  time: 0.0632
2024/06/07 10:00:04 - mmengine - INFO - Epoch(train)  [8][ 50/129]  lr: 1.0000e-03  eta: 0:19:47  time: 0.3289  data_time: 0.0208  memory: 2346  loss: nan  loss_rpn_cls: 0.0866  loss_rpn_bbox: 0.0515  loss_cls: 0.2141  acc: 92.1143  loss_bbox: nan
2024/06/07 10:00:19 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:00:20 - mmengine - INFO - Epoch(train)  [8][100/129]  lr: 1.0000e-03  eta: 0:19:29  time: 0.3149  data_time: 0.0108  memory: 2346  loss: nan  loss_rpn_cls: 0.0837  loss_rpn_bbox: 0.0500  loss_cls: 0.2119  acc: 91.9434  loss_bbox: nan
2024/06/07 10:00:29 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:00:29 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/06/07 10:00:33 - mmengine - INFO - Epoch(val)  [8][50/68]    eta: 0:00:01  time: 0.0702  data_time: 0.0275  memory: 2346  
2024/06/07 10:00:34 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:00:36 - mmengine - INFO - bbox_mAP_copypaste: 0.254 0.667 0.099 0.127 0.256 0.307
2024/06/07 10:00:36 - mmengine - INFO - Epoch(val) [8][68/68]    coco/bbox_mAP: 0.2540  coco/bbox_mAP_50: 0.6670  coco/bbox_mAP_75: 0.0990  coco/bbox_mAP_s: 0.1270  coco/bbox_mAP_m: 0.2560  coco/bbox_mAP_l: 0.3070  data_time: 0.0207  time: 0.0629
2024/06/07 10:00:52 - mmengine - INFO - Epoch(train)  [9][ 50/129]  lr: 1.0000e-03  eta: 0:19:04  time: 0.3269  data_time: 0.0186  memory: 2346  loss: nan  loss_rpn_cls: 0.0769  loss_rpn_bbox: 0.0481  loss_cls: 0.2031  acc: 91.9434  loss_bbox: nan
2024/06/07 10:01:08 - mmengine - INFO - Epoch(train)  [9][100/129]  lr: 1.0000e-03  eta: 0:18:47  time: 0.3152  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.0744  loss_rpn_bbox: 0.0486  loss_cls: 0.1961  acc: 91.7603  loss_bbox: nan
2024/06/07 10:01:17 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:01:21 - mmengine - INFO - Epoch(val)  [9][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0271  memory: 2346  
2024/06/07 10:01:21 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:01:23 - mmengine - INFO - bbox_mAP_copypaste: 0.323 0.704 0.221 0.206 0.315 0.375
2024/06/07 10:01:23 - mmengine - INFO - Epoch(val) [9][68/68]    coco/bbox_mAP: 0.3230  coco/bbox_mAP_50: 0.7040  coco/bbox_mAP_75: 0.2210  coco/bbox_mAP_s: 0.2060  coco/bbox_mAP_m: 0.3150  coco/bbox_mAP_l: 0.3750  data_time: 0.0204  time: 0.0632
2024/06/07 10:01:39 - mmengine - INFO - Epoch(train) [10][ 50/129]  lr: 1.0000e-03  eta: 0:18:21  time: 0.3225  data_time: 0.0169  memory: 2346  loss: nan  loss_rpn_cls: 0.0798  loss_rpn_bbox: 0.0485  loss_cls: 0.2029  acc: 93.6157  loss_bbox: nan
2024/06/07 10:01:55 - mmengine - INFO - Epoch(train) [10][100/129]  lr: 1.0000e-03  eta: 0:18:04  time: 0.3143  data_time: 0.0102  memory: 2346  loss: nan  loss_rpn_cls: 0.0815  loss_rpn_bbox: 0.0485  loss_cls: 0.2043  acc: 91.4551  loss_bbox: nan
2024/06/07 10:02:04 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:02:07 - mmengine - INFO - Epoch(val) [10][50/68]    eta: 0:00:01  time: 0.0706  data_time: 0.0281  memory: 2346  
2024/06/07 10:02:08 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:02:09 - mmengine - INFO - bbox_mAP_copypaste: 0.275 0.662 0.157 0.158 0.284 0.321
2024/06/07 10:02:09 - mmengine - INFO - Epoch(val) [10][68/68]    coco/bbox_mAP: 0.2750  coco/bbox_mAP_50: 0.6620  coco/bbox_mAP_75: 0.1570  coco/bbox_mAP_s: 0.1580  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.3210  data_time: 0.0211  time: 0.0630
2024/06/07 10:02:26 - mmengine - INFO - Epoch(train) [11][ 50/129]  lr: 1.0000e-03  eta: 0:17:39  time: 0.3249  data_time: 0.0182  memory: 2346  loss: nan  loss_rpn_cls: 0.0770  loss_rpn_bbox: 0.0475  loss_cls: 0.2046  acc: 92.8833  loss_bbox: nan
2024/06/07 10:02:42 - mmengine - INFO - Epoch(train) [11][100/129]  lr: 1.0000e-03  eta: 0:17:23  time: 0.3168  data_time: 0.0111  memory: 2346  loss: nan  loss_rpn_cls: 0.0680  loss_rpn_bbox: 0.0481  loss_cls: 0.1981  acc: 91.4185  loss_bbox: nan
2024/06/07 10:02:51 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:02:54 - mmengine - INFO - Epoch(val) [11][50/68]    eta: 0:00:01  time: 0.0704  data_time: 0.0298  memory: 2346  
2024/06/07 10:02:55 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:02:56 - mmengine - INFO - bbox_mAP_copypaste: 0.295 0.671 0.181 0.160 0.326 0.339
2024/06/07 10:02:56 - mmengine - INFO - Epoch(val) [11][68/68]    coco/bbox_mAP: 0.2950  coco/bbox_mAP_50: 0.6710  coco/bbox_mAP_75: 0.1810  coco/bbox_mAP_s: 0.1600  coco/bbox_mAP_m: 0.3260  coco/bbox_mAP_l: 0.3390  data_time: 0.0224  time: 0.0626
2024/06/07 10:03:13 - mmengine - INFO - Epoch(train) [12][ 50/129]  lr: 1.0000e-03  eta: 0:16:57  time: 0.3249  data_time: 0.0167  memory: 2346  loss: nan  loss_rpn_cls: 0.0794  loss_rpn_bbox: 0.0480  loss_cls: 0.2009  acc: 93.2007  loss_bbox: nan
2024/06/07 10:03:28 - mmengine - INFO - Epoch(train) [12][100/129]  lr: 1.0000e-03  eta: 0:16:41  time: 0.3151  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0814  loss_rpn_bbox: 0.0493  loss_cls: 0.2023  acc: 92.3828  loss_bbox: nan
2024/06/07 10:03:37 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:03:41 - mmengine - INFO - Epoch(val) [12][50/68]    eta: 0:00:01  time: 0.0707  data_time: 0.0282  memory: 2346  
2024/06/07 10:03:42 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:03:43 - mmengine - INFO - bbox_mAP_copypaste: 0.317 0.706 0.199 0.190 0.304 0.374
2024/06/07 10:03:43 - mmengine - INFO - Epoch(val) [12][68/68]    coco/bbox_mAP: 0.3170  coco/bbox_mAP_50: 0.7060  coco/bbox_mAP_75: 0.1990  coco/bbox_mAP_s: 0.1900  coco/bbox_mAP_m: 0.3040  coco/bbox_mAP_l: 0.3740  data_time: 0.0212  time: 0.0631
2024/06/07 10:03:59 - mmengine - INFO - Epoch(train) [13][ 50/129]  lr: 1.0000e-03  eta: 0:16:15  time: 0.3212  data_time: 0.0162  memory: 2346  loss: nan  loss_rpn_cls: 0.0763  loss_rpn_bbox: 0.0495  loss_cls: 0.1966  acc: 93.2861  loss_bbox: nan
2024/06/07 10:04:15 - mmengine - INFO - Epoch(train) [13][100/129]  lr: 1.0000e-03  eta: 0:15:59  time: 0.3170  data_time: 0.0127  memory: 2346  loss: nan  loss_rpn_cls: 0.0688  loss_rpn_bbox: 0.0473  loss_cls: 0.1945  acc: 93.7988  loss_bbox: nan
2024/06/07 10:04:24 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:04:28 - mmengine - INFO - Epoch(val) [13][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0276  memory: 2346  
2024/06/07 10:04:29 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:04:30 - mmengine - INFO - bbox_mAP_copypaste: 0.315 0.731 0.173 0.202 0.320 0.357
2024/06/07 10:04:30 - mmengine - INFO - Epoch(val) [13][68/68]    coco/bbox_mAP: 0.3150  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.1730  coco/bbox_mAP_s: 0.2020  coco/bbox_mAP_m: 0.3200  coco/bbox_mAP_l: 0.3570  data_time: 0.0208  time: 0.0630
2024/06/07 10:04:46 - mmengine - INFO - Epoch(train) [14][ 50/129]  lr: 1.0000e-03  eta: 0:15:34  time: 0.3275  data_time: 0.0210  memory: 2346  loss: nan  loss_rpn_cls: 0.0707  loss_rpn_bbox: 0.0456  loss_cls: 0.1994  acc: 93.2007  loss_bbox: nan
2024/06/07 10:05:02 - mmengine - INFO - Epoch(train) [14][100/129]  lr: 1.0000e-03  eta: 0:15:17  time: 0.3185  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0708  loss_rpn_bbox: 0.0460  loss_cls: 0.1917  acc: 93.0420  loss_bbox: nan
2024/06/07 10:05:11 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:05:15 - mmengine - INFO - Epoch(val) [14][50/68]    eta: 0:00:01  time: 0.0705  data_time: 0.0289  memory: 2346  
2024/06/07 10:05:16 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:05:17 - mmengine - INFO - bbox_mAP_copypaste: 0.302 0.722 0.145 0.167 0.312 0.353
2024/06/07 10:05:17 - mmengine - INFO - Epoch(val) [14][68/68]    coco/bbox_mAP: 0.3020  coco/bbox_mAP_50: 0.7220  coco/bbox_mAP_75: 0.1450  coco/bbox_mAP_s: 0.1670  coco/bbox_mAP_m: 0.3120  coco/bbox_mAP_l: 0.3530  data_time: 0.0217  time: 0.0629
2024/06/07 10:05:33 - mmengine - INFO - Epoch(train) [15][ 50/129]  lr: 1.0000e-03  eta: 0:14:52  time: 0.3266  data_time: 0.0193  memory: 2346  loss: nan  loss_rpn_cls: 0.0734  loss_rpn_bbox: 0.0490  loss_cls: 0.1950  acc: 91.8945  loss_bbox: nan
2024/06/07 10:05:49 - mmengine - INFO - Epoch(train) [15][100/129]  lr: 1.0000e-03  eta: 0:14:36  time: 0.3191  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0686  loss_rpn_bbox: 0.0473  loss_cls: 0.1901  acc: 91.2354  loss_bbox: nan
2024/06/07 10:05:58 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:06:02 - mmengine - INFO - Epoch(val) [15][50/68]    eta: 0:00:01  time: 0.0695  data_time: 0.0282  memory: 2346  
2024/06/07 10:06:03 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:06:04 - mmengine - INFO - bbox_mAP_copypaste: 0.347 0.710 0.286 0.191 0.389 0.392
2024/06/07 10:06:04 - mmengine - INFO - Epoch(val) [15][68/68]    coco/bbox_mAP: 0.3470  coco/bbox_mAP_50: 0.7100  coco/bbox_mAP_75: 0.2860  coco/bbox_mAP_s: 0.1910  coco/bbox_mAP_m: 0.3890  coco/bbox_mAP_l: 0.3920  data_time: 0.0212  time: 0.0621
2024/06/07 10:06:20 - mmengine - INFO - Epoch(train) [16][ 50/129]  lr: 1.0000e-03  eta: 0:14:11  time: 0.3275  data_time: 0.0193  memory: 2346  loss: nan  loss_rpn_cls: 0.0643  loss_rpn_bbox: 0.0444  loss_cls: 0.1901  acc: 92.6880  loss_bbox: nan
2024/06/07 10:06:25 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:06:36 - mmengine - INFO - Epoch(train) [16][100/129]  lr: 1.0000e-03  eta: 0:13:55  time: 0.3199  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0736  loss_rpn_bbox: 0.0488  loss_cls: 0.1901  acc: 92.2363  loss_bbox: nan
2024/06/07 10:06:45 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:06:45 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/06/07 10:06:50 - mmengine - INFO - Epoch(val) [16][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0267  memory: 2346  
2024/06/07 10:06:51 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:06:53 - mmengine - INFO - bbox_mAP_copypaste: 0.364 0.730 0.300 0.250 0.369 0.408
2024/06/07 10:06:53 - mmengine - INFO - Epoch(val) [16][68/68]    coco/bbox_mAP: 0.3640  coco/bbox_mAP_50: 0.7300  coco/bbox_mAP_75: 0.3000  coco/bbox_mAP_s: 0.2500  coco/bbox_mAP_m: 0.3690  coco/bbox_mAP_l: 0.4080  data_time: 0.0202  time: 0.0633
2024/06/07 10:07:09 - mmengine - INFO - Epoch(train) [17][ 50/129]  lr: 1.0000e-04  eta: 0:13:30  time: 0.3243  data_time: 0.0178  memory: 2346  loss: nan  loss_rpn_cls: 0.0610  loss_rpn_bbox: 0.0422  loss_cls: 0.1812  acc: 94.2139  loss_bbox: nan
2024/06/07 10:07:25 - mmengine - INFO - Epoch(train) [17][100/129]  lr: 1.0000e-04  eta: 0:13:13  time: 0.3146  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0599  loss_rpn_bbox: 0.0415  loss_cls: 0.1727  acc: 94.2017  loss_bbox: nan
2024/06/07 10:07:34 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:07:37 - mmengine - INFO - Epoch(val) [17][50/68]    eta: 0:00:01  time: 0.0704  data_time: 0.0272  memory: 2346  
2024/06/07 10:07:38 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:07:39 - mmengine - INFO - bbox_mAP_copypaste: 0.359 0.742 0.294 0.215 0.365 0.411
2024/06/07 10:07:39 - mmengine - INFO - Epoch(val) [17][68/68]    coco/bbox_mAP: 0.3590  coco/bbox_mAP_50: 0.7420  coco/bbox_mAP_75: 0.2940  coco/bbox_mAP_s: 0.2150  coco/bbox_mAP_m: 0.3650  coco/bbox_mAP_l: 0.4110  data_time: 0.0205  time: 0.0631
2024/06/07 10:07:55 - mmengine - INFO - Epoch(train) [18][ 50/129]  lr: 1.0000e-04  eta: 0:12:48  time: 0.3216  data_time: 0.0155  memory: 2346  loss: nan  loss_rpn_cls: 0.0550  loss_rpn_bbox: 0.0391  loss_cls: 0.1668  acc: 93.7378  loss_bbox: nan
2024/06/07 10:08:11 - mmengine - INFO - Epoch(train) [18][100/129]  lr: 1.0000e-04  eta: 0:12:32  time: 0.3133  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0576  loss_rpn_bbox: 0.0392  loss_cls: 0.1670  acc: 93.3960  loss_bbox: nan
2024/06/07 10:08:20 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:08:23 - mmengine - INFO - Epoch(val) [18][50/68]    eta: 0:00:01  time: 0.0705  data_time: 0.0278  memory: 2346  
2024/06/07 10:08:24 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:08:26 - mmengine - INFO - bbox_mAP_copypaste: 0.381 0.749 0.349 0.241 0.374 0.438
2024/06/07 10:08:26 - mmengine - INFO - Epoch(val) [18][68/68]    coco/bbox_mAP: 0.3810  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.3490  coco/bbox_mAP_s: 0.2410  coco/bbox_mAP_m: 0.3740  coco/bbox_mAP_l: 0.4380  data_time: 0.0209  time: 0.0633
2024/06/07 10:08:42 - mmengine - INFO - Epoch(train) [19][ 50/129]  lr: 1.0000e-04  eta: 0:12:06  time: 0.3236  data_time: 0.0168  memory: 2346  loss: nan  loss_rpn_cls: 0.0549  loss_rpn_bbox: 0.0403  loss_cls: 0.1644  acc: 93.9819  loss_bbox: nan
2024/06/07 10:08:57 - mmengine - INFO - Epoch(train) [19][100/129]  lr: 1.0000e-04  eta: 0:11:50  time: 0.3139  data_time: 0.0102  memory: 2346  loss: nan  loss_rpn_cls: 0.0542  loss_rpn_bbox: 0.0390  loss_cls: 0.1656  acc: 93.4814  loss_bbox: nan
2024/06/07 10:09:06 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:09:10 - mmengine - INFO - Epoch(val) [19][50/68]    eta: 0:00:01  time: 0.0700  data_time: 0.0265  memory: 2346  
2024/06/07 10:09:11 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:09:12 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.746 0.374 0.244 0.398 0.450
2024/06/07 10:09:12 - mmengine - INFO - Epoch(val) [19][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3740  coco/bbox_mAP_s: 0.2440  coco/bbox_mAP_m: 0.3980  coco/bbox_mAP_l: 0.4500  data_time: 0.0200  time: 0.0630
2024/06/07 10:09:28 - mmengine - INFO - Epoch(train) [20][ 50/129]  lr: 1.0000e-04  eta: 0:11:25  time: 0.3240  data_time: 0.0166  memory: 2346  loss: nan  loss_rpn_cls: 0.0549  loss_rpn_bbox: 0.0401  loss_cls: 0.1672  acc: 93.5059  loss_bbox: nan
2024/06/07 10:09:44 - mmengine - INFO - Epoch(train) [20][100/129]  lr: 1.0000e-04  eta: 0:11:09  time: 0.3172  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.0531  loss_rpn_bbox: 0.0388  loss_cls: 0.1617  acc: 94.5923  loss_bbox: nan
2024/06/07 10:09:53 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:09:57 - mmengine - INFO - Epoch(val) [20][50/68]    eta: 0:00:01  time: 0.0705  data_time: 0.0278  memory: 2346  
2024/06/07 10:09:58 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:09:59 - mmengine - INFO - bbox_mAP_copypaste: 0.426 0.750 0.446 0.271 0.442 0.480
2024/06/07 10:09:59 - mmengine - INFO - Epoch(val) [20][68/68]    coco/bbox_mAP: 0.4260  coco/bbox_mAP_50: 0.7500  coco/bbox_mAP_75: 0.4460  coco/bbox_mAP_s: 0.2710  coco/bbox_mAP_m: 0.4420  coco/bbox_mAP_l: 0.4800  data_time: 0.0210  time: 0.0631
2024/06/07 10:10:15 - mmengine - INFO - Epoch(train) [21][ 50/129]  lr: 1.0000e-04  eta: 0:10:43  time: 0.3242  data_time: 0.0200  memory: 2346  loss: nan  loss_rpn_cls: 0.0506  loss_rpn_bbox: 0.0375  loss_cls: 0.1563  acc: 91.3086  loss_bbox: nan
2024/06/07 10:10:30 - mmengine - INFO - Epoch(train) [21][100/129]  lr: 1.0000e-04  eta: 0:10:27  time: 0.3136  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.0526  loss_rpn_bbox: 0.0390  loss_cls: 0.1587  acc: 94.0063  loss_bbox: nan
2024/06/07 10:10:39 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:10:43 - mmengine - INFO - Epoch(val) [21][50/68]    eta: 0:00:01  time: 0.0691  data_time: 0.0275  memory: 2346  
2024/06/07 10:10:44 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:10:45 - mmengine - INFO - bbox_mAP_copypaste: 0.389 0.742 0.363 0.243 0.403 0.443
2024/06/07 10:10:45 - mmengine - INFO - Epoch(val) [21][68/68]    coco/bbox_mAP: 0.3890  coco/bbox_mAP_50: 0.7420  coco/bbox_mAP_75: 0.3630  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4030  coco/bbox_mAP_l: 0.4430  data_time: 0.0207  time: 0.0620
2024/06/07 10:11:01 - mmengine - INFO - Epoch(train) [22][ 50/129]  lr: 1.0000e-04  eta: 0:10:02  time: 0.3272  data_time: 0.0217  memory: 2346  loss: nan  loss_rpn_cls: 0.0510  loss_rpn_bbox: 0.0378  loss_cls: 0.1572  acc: 92.9810  loss_bbox: nan
2024/06/07 10:11:17 - mmengine - INFO - Epoch(train) [22][100/129]  lr: 1.0000e-04  eta: 0:09:46  time: 0.3141  data_time: 0.0106  memory: 2346  loss: nan  loss_rpn_cls: 0.0491  loss_rpn_bbox: 0.0385  loss_cls: 0.1597  acc: 94.4580  loss_bbox: nan
2024/06/07 10:11:26 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:11:29 - mmengine - INFO - Epoch(val) [22][50/68]    eta: 0:00:01  time: 0.0693  data_time: 0.0277  memory: 2346  
2024/06/07 10:11:30 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:11:31 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.746 0.374 0.243 0.405 0.452
2024/06/07 10:11:31 - mmengine - INFO - Epoch(val) [22][68/68]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3740  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4050  coco/bbox_mAP_l: 0.4520  data_time: 0.0209  time: 0.0619
2024/06/07 10:11:47 - mmengine - INFO - Epoch(train) [23][ 50/129]  lr: 1.0000e-05  eta: 0:09:20  time: 0.3217  data_time: 0.0165  memory: 2346  loss: nan  loss_rpn_cls: 0.0500  loss_rpn_bbox: 0.0374  loss_cls: 0.1532  acc: 92.9688  loss_bbox: nan
2024/06/07 10:12:03 - mmengine - INFO - Epoch(train) [23][100/129]  lr: 1.0000e-05  eta: 0:09:04  time: 0.3136  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0501  loss_rpn_bbox: 0.0376  loss_cls: 0.1541  acc: 93.7866  loss_bbox: nan
2024/06/07 10:12:12 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:12:15 - mmengine - INFO - Epoch(val) [23][50/68]    eta: 0:00:01  time: 0.0700  data_time: 0.0290  memory: 2346  
2024/06/07 10:12:16 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:12:17 - mmengine - INFO - bbox_mAP_copypaste: 0.402 0.747 0.396 0.247 0.416 0.457
2024/06/07 10:12:17 - mmengine - INFO - Epoch(val) [23][68/68]    coco/bbox_mAP: 0.4020  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.3960  coco/bbox_mAP_s: 0.2470  coco/bbox_mAP_m: 0.4160  coco/bbox_mAP_l: 0.4570  data_time: 0.0218  time: 0.0624
2024/06/07 10:12:28 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:12:34 - mmengine - INFO - Epoch(train) [24][ 50/129]  lr: 1.0000e-05  eta: 0:08:39  time: 0.3232  data_time: 0.0191  memory: 2346  loss: nan  loss_rpn_cls: 0.0496  loss_rpn_bbox: 0.0383  loss_cls: 0.1535  acc: 94.5679  loss_bbox: nan
2024/06/07 10:12:49 - mmengine - INFO - Epoch(train) [24][100/129]  lr: 1.0000e-05  eta: 0:08:23  time: 0.3143  data_time: 0.0102  memory: 2346  loss: nan  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.0367  loss_cls: 0.1525  acc: 94.0796  loss_bbox: nan
2024/06/07 10:12:58 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:12:58 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/06/07 10:13:03 - mmengine - INFO - Epoch(val) [24][50/68]    eta: 0:00:01  time: 0.0730  data_time: 0.0294  memory: 2346  
2024/06/07 10:13:04 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:13:05 - mmengine - INFO - bbox_mAP_copypaste: 0.393 0.748 0.373 0.242 0.406 0.447
2024/06/07 10:13:05 - mmengine - INFO - Epoch(val) [24][68/68]    coco/bbox_mAP: 0.3930  coco/bbox_mAP_50: 0.7480  coco/bbox_mAP_75: 0.3730  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.4060  coco/bbox_mAP_l: 0.4470  data_time: 0.0220  time: 0.0645
2024/06/07 10:13:21 - mmengine - INFO - Epoch(train) [25][ 50/129]  lr: 1.0000e-05  eta: 0:07:58  time: 0.3206  data_time: 0.0195  memory: 2346  loss: nan  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.0378  loss_cls: 0.1556  acc: 93.1274  loss_bbox: nan
2024/06/07 10:13:37 - mmengine - INFO - Epoch(train) [25][100/129]  lr: 1.0000e-05  eta: 0:07:41  time: 0.3138  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.0535  loss_rpn_bbox: 0.0366  loss_cls: 0.1560  acc: 94.7266  loss_bbox: nan
2024/06/07 10:13:45 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:13:49 - mmengine - INFO - Epoch(val) [25][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0286  memory: 2346  
2024/06/07 10:13:50 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:13:51 - mmengine - INFO - bbox_mAP_copypaste: 0.392 0.746 0.372 0.243 0.402 0.446
2024/06/07 10:13:51 - mmengine - INFO - Epoch(val) [25][68/68]    coco/bbox_mAP: 0.3920  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3720  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4020  coco/bbox_mAP_l: 0.4460  data_time: 0.0215  time: 0.0626
2024/06/07 10:14:07 - mmengine - INFO - Epoch(train) [26][ 50/129]  lr: 1.0000e-05  eta: 0:07:16  time: 0.3233  data_time: 0.0184  memory: 2346  loss: nan  loss_rpn_cls: 0.0496  loss_rpn_bbox: 0.0363  loss_cls: 0.1519  acc: 93.4204  loss_bbox: nan
2024/06/07 10:14:23 - mmengine - INFO - Epoch(train) [26][100/129]  lr: 1.0000e-05  eta: 0:07:00  time: 0.3137  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0502  loss_rpn_bbox: 0.0373  loss_cls: 0.1519  acc: 91.5527  loss_bbox: nan
2024/06/07 10:14:32 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:14:35 - mmengine - INFO - Epoch(val) [26][50/68]    eta: 0:00:01  time: 0.0697  data_time: 0.0277  memory: 2346  
2024/06/07 10:14:36 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:14:37 - mmengine - INFO - bbox_mAP_copypaste: 0.385 0.746 0.361 0.237 0.393 0.440
2024/06/07 10:14:37 - mmengine - INFO - Epoch(val) [26][68/68]    coco/bbox_mAP: 0.3850  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3610  coco/bbox_mAP_s: 0.2370  coco/bbox_mAP_m: 0.3930  coco/bbox_mAP_l: 0.4400  data_time: 0.0208  time: 0.0622
2024/06/07 10:14:53 - mmengine - INFO - Epoch(train) [27][ 50/129]  lr: 1.0000e-05  eta: 0:06:35  time: 0.3236  data_time: 0.0172  memory: 2346  loss: nan  loss_rpn_cls: 0.0483  loss_rpn_bbox: 0.0360  loss_cls: 0.1489  acc: 93.2129  loss_bbox: nan
2024/06/07 10:15:09 - mmengine - INFO - Epoch(train) [27][100/129]  lr: 1.0000e-05  eta: 0:06:19  time: 0.3166  data_time: 0.0103  memory: 2346  loss: nan  loss_rpn_cls: 0.0493  loss_rpn_bbox: 0.0358  loss_cls: 0.1530  acc: 93.5547  loss_bbox: nan
2024/06/07 10:15:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:15:22 - mmengine - INFO - Epoch(val) [27][50/68]    eta: 0:00:01  time: 0.0699  data_time: 0.0280  memory: 2346  
2024/06/07 10:15:22 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:15:23 - mmengine - INFO - bbox_mAP_copypaste: 0.404 0.746 0.396 0.247 0.416 0.462
2024/06/07 10:15:23 - mmengine - INFO - Epoch(val) [27][68/68]    coco/bbox_mAP: 0.4040  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3960  coco/bbox_mAP_s: 0.2470  coco/bbox_mAP_m: 0.4160  coco/bbox_mAP_l: 0.4620  data_time: 0.0211  time: 0.0623
2024/06/07 10:15:40 - mmengine - INFO - Epoch(train) [28][ 50/129]  lr: 1.0000e-05  eta: 0:05:54  time: 0.3247  data_time: 0.0172  memory: 2346  loss: nan  loss_rpn_cls: 0.0482  loss_rpn_bbox: 0.0372  loss_cls: 0.1496  acc: 95.8008  loss_bbox: nan
2024/06/07 10:15:56 - mmengine - INFO - Epoch(train) [28][100/129]  lr: 1.0000e-05  eta: 0:05:38  time: 0.3172  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0525  loss_rpn_bbox: 0.0381  loss_cls: 0.1519  acc: 95.0439  loss_bbox: nan
2024/06/07 10:16:05 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:16:08 - mmengine - INFO - Epoch(val) [28][50/68]    eta: 0:00:01  time: 0.0699  data_time: 0.0275  memory: 2346  
2024/06/07 10:16:09 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:16:10 - mmengine - INFO - bbox_mAP_copypaste: 0.393 0.747 0.375 0.241 0.404 0.450
2024/06/07 10:16:10 - mmengine - INFO - Epoch(val) [28][68/68]    coco/bbox_mAP: 0.3930  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.3750  coco/bbox_mAP_s: 0.2410  coco/bbox_mAP_m: 0.4040  coco/bbox_mAP_l: 0.4500  data_time: 0.0207  time: 0.0625
2024/06/07 10:16:26 - mmengine - INFO - Epoch(train) [29][ 50/129]  lr: 1.0000e-05  eta: 0:05:13  time: 0.3215  data_time: 0.0155  memory: 2346  loss: nan  loss_rpn_cls: 0.0476  loss_rpn_bbox: 0.0351  loss_cls: 0.1479  acc: 93.4692  loss_bbox: nan
2024/06/07 10:16:42 - mmengine - INFO - Epoch(train) [29][100/129]  lr: 1.0000e-05  eta: 0:04:57  time: 0.3157  data_time: 0.0107  memory: 2346  loss: nan  loss_rpn_cls: 0.0469  loss_rpn_bbox: 0.0349  loss_cls: 0.1468  acc: 93.4326  loss_bbox: nan
2024/06/07 10:16:51 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:16:55 - mmengine - INFO - Epoch(val) [29][50/68]    eta: 0:00:01  time: 0.0698  data_time: 0.0272  memory: 2346  
2024/06/07 10:16:55 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:16:56 - mmengine - INFO - bbox_mAP_copypaste: 0.405 0.749 0.393 0.250 0.415 0.462
2024/06/07 10:16:56 - mmengine - INFO - Epoch(val) [29][68/68]    coco/bbox_mAP: 0.4050  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.3930  coco/bbox_mAP_s: 0.2500  coco/bbox_mAP_m: 0.4150  coco/bbox_mAP_l: 0.4620  data_time: 0.0205  time: 0.0626
2024/06/07 10:17:13 - mmengine - INFO - Epoch(train) [30][ 50/129]  lr: 1.0000e-05  eta: 0:04:31  time: 0.3233  data_time: 0.0188  memory: 2346  loss: nan  loss_rpn_cls: 0.0500  loss_rpn_bbox: 0.0387  loss_cls: 0.1517  acc: 93.7744  loss_bbox: nan
2024/06/07 10:17:28 - mmengine - INFO - Epoch(train) [30][100/129]  lr: 1.0000e-05  eta: 0:04:16  time: 0.3166  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0469  loss_rpn_bbox: 0.0364  loss_cls: 0.1540  acc: 91.9434  loss_bbox: nan
2024/06/07 10:17:37 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:17:41 - mmengine - INFO - Epoch(val) [30][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0282  memory: 2346  
2024/06/07 10:17:42 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:17:43 - mmengine - INFO - bbox_mAP_copypaste: 0.391 0.747 0.370 0.245 0.391 0.447
2024/06/07 10:17:43 - mmengine - INFO - Epoch(val) [30][68/68]    coco/bbox_mAP: 0.3910  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.3700  coco/bbox_mAP_s: 0.2450  coco/bbox_mAP_m: 0.3910  coco/bbox_mAP_l: 0.4470  data_time: 0.0212  time: 0.0628
2024/06/07 10:17:59 - mmengine - INFO - Epoch(train) [31][ 50/129]  lr: 1.0000e-05  eta: 0:03:50  time: 0.3288  data_time: 0.0208  memory: 2346  loss: nan  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.0383  loss_cls: 0.1527  acc: 93.7744  loss_bbox: nan
2024/06/07 10:18:15 - mmengine - INFO - Epoch(train) [31][100/129]  lr: 1.0000e-05  eta: 0:03:34  time: 0.3170  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0491  loss_rpn_bbox: 0.0365  loss_cls: 0.1534  acc: 92.6270  loss_bbox: nan
2024/06/07 10:18:24 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:18:28 - mmengine - INFO - Epoch(val) [31][50/68]    eta: 0:00:01  time: 0.0696  data_time: 0.0277  memory: 2346  
2024/06/07 10:18:29 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:18:30 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.746 0.379 0.242 0.410 0.451
2024/06/07 10:18:30 - mmengine - INFO - Epoch(val) [31][68/68]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.7460  coco/bbox_mAP_75: 0.3790  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.4100  coco/bbox_mAP_l: 0.4510  data_time: 0.0209  time: 0.0622
2024/06/07 10:18:30 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:18:46 - mmengine - INFO - Epoch(train) [32][ 50/129]  lr: 1.0000e-05  eta: 0:03:09  time: 0.3219  data_time: 0.0163  memory: 2346  loss: nan  loss_rpn_cls: 0.0453  loss_rpn_bbox: 0.0348  loss_cls: 0.1443  acc: 94.7632  loss_bbox: nan
2024/06/07 10:19:01 - mmengine - INFO - Epoch(train) [32][100/129]  lr: 1.0000e-05  eta: 0:02:53  time: 0.3173  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0482  loss_rpn_bbox: 0.0374  loss_cls: 0.1501  acc: 93.3716  loss_bbox: nan
2024/06/07 10:19:10 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:19:10 - mmengine - INFO - Saving checkpoint at 32 epochs
2024/06/07 10:19:15 - mmengine - INFO - Epoch(val) [32][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0291  memory: 2346  
2024/06/07 10:19:16 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:19:17 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.749 0.376 0.247 0.408 0.450
2024/06/07 10:19:17 - mmengine - INFO - Epoch(val) [32][68/68]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.7490  coco/bbox_mAP_75: 0.3760  coco/bbox_mAP_s: 0.2470  coco/bbox_mAP_m: 0.4080  coco/bbox_mAP_l: 0.4500  data_time: 0.0220  time: 0.0635
2024/06/07 10:19:33 - mmengine - INFO - Epoch(train) [33][ 50/129]  lr: 1.0000e-05  eta: 0:02:28  time: 0.3218  data_time: 0.0152  memory: 2346  loss: nan  loss_rpn_cls: 0.0488  loss_rpn_bbox: 0.0368  loss_cls: 0.1517  acc: 91.9189  loss_bbox: nan
2024/06/07 10:19:49 - mmengine - INFO - Epoch(train) [33][100/129]  lr: 1.0000e-05  eta: 0:02:12  time: 0.3165  data_time: 0.0104  memory: 2346  loss: nan  loss_rpn_cls: 0.0464  loss_rpn_bbox: 0.0348  loss_cls: 0.1506  acc: 92.7734  loss_bbox: nan
2024/06/07 10:19:58 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:20:01 - mmengine - INFO - Epoch(val) [33][50/68]    eta: 0:00:01  time: 0.0701  data_time: 0.0274  memory: 2346  
2024/06/07 10:20:02 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:20:03 - mmengine - INFO - bbox_mAP_copypaste: 0.410 0.747 0.408 0.256 0.430 0.463
2024/06/07 10:20:03 - mmengine - INFO - Epoch(val) [33][68/68]    coco/bbox_mAP: 0.4100  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.4080  coco/bbox_mAP_s: 0.2560  coco/bbox_mAP_m: 0.4300  coco/bbox_mAP_l: 0.4630  data_time: 0.0207  time: 0.0628
2024/06/07 10:20:20 - mmengine - INFO - Epoch(train) [34][ 50/129]  lr: 1.0000e-05  eta: 0:01:47  time: 0.3296  data_time: 0.0208  memory: 2346  loss: nan  loss_rpn_cls: 0.0467  loss_rpn_bbox: 0.0367  loss_cls: 0.1508  acc: 95.4346  loss_bbox: nan
2024/06/07 10:20:36 - mmengine - INFO - Epoch(train) [34][100/129]  lr: 1.0000e-05  eta: 0:01:31  time: 0.3191  data_time: 0.0136  memory: 2346  loss: nan  loss_rpn_cls: 0.0490  loss_rpn_bbox: 0.0375  loss_cls: 0.1514  acc: 93.7256  loss_bbox: nan
2024/06/07 10:20:45 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:20:48 - mmengine - INFO - Epoch(val) [34][50/68]    eta: 0:00:01  time: 0.0700  data_time: 0.0278  memory: 2346  
2024/06/07 10:20:49 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:20:50 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.747 0.376 0.242 0.413 0.451
2024/06/07 10:20:50 - mmengine - INFO - Epoch(val) [34][68/68]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.7470  coco/bbox_mAP_75: 0.3760  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.4130  coco/bbox_mAP_l: 0.4510  data_time: 0.0209  time: 0.0626
2024/06/07 10:21:06 - mmengine - INFO - Epoch(train) [35][ 50/129]  lr: 1.0000e-05  eta: 0:01:06  time: 0.3220  data_time: 0.0166  memory: 2346  loss: nan  loss_rpn_cls: 0.0468  loss_rpn_bbox: 0.0364  loss_cls: 0.1513  acc: 93.6035  loss_bbox: nan
2024/06/07 10:21:22 - mmengine - INFO - Epoch(train) [35][100/129]  lr: 1.0000e-05  eta: 0:00:50  time: 0.3177  data_time: 0.0105  memory: 2346  loss: nan  loss_rpn_cls: 0.0505  loss_rpn_bbox: 0.0365  loss_cls: 0.1492  acc: 93.5669  loss_bbox: nan
2024/06/07 10:21:31 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:21:35 - mmengine - INFO - Epoch(val) [35][50/68]    eta: 0:00:01  time: 0.0703  data_time: 0.0280  memory: 2346  
2024/06/07 10:21:36 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:21:37 - mmengine - INFO - bbox_mAP_copypaste: 0.410 0.753 0.407 0.257 0.423 0.466
2024/06/07 10:21:37 - mmengine - INFO - Epoch(val) [35][68/68]    coco/bbox_mAP: 0.4100  coco/bbox_mAP_50: 0.7530  coco/bbox_mAP_75: 0.4070  coco/bbox_mAP_s: 0.2570  coco/bbox_mAP_m: 0.4230  coco/bbox_mAP_l: 0.4660  data_time: 0.0211  time: 0.0627
2024/06/07 10:21:53 - mmengine - INFO - Epoch(train) [36][ 50/129]  lr: 1.0000e-05  eta: 0:00:25  time: 0.3195  data_time: 0.0149  memory: 2346  loss: nan  loss_rpn_cls: 0.0497  loss_rpn_bbox: 0.0371  loss_cls: 0.1539  acc: 93.8477  loss_bbox: nan
2024/06/07 10:22:08 - mmengine - INFO - Epoch(train) [36][100/129]  lr: 1.0000e-05  eta: 0:00:09  time: 0.3185  data_time: 0.0128  memory: 2346  loss: nan  loss_rpn_cls: 0.0472  loss_rpn_bbox: 0.0373  loss_cls: 0.1528  acc: 94.8120  loss_bbox: nan
2024/06/07 10:22:18 - mmengine - INFO - Exp name: faster-rcnn_r50_fpn_1x_coco_20240607_095405
2024/06/07 10:22:18 - mmengine - INFO - Saving checkpoint at 36 epochs
2024/06/07 10:22:22 - mmengine - INFO - Epoch(val) [36][50/68]    eta: 0:00:01  time: 0.0702  data_time: 0.0280  memory: 2346  
2024/06/07 10:22:23 - mmengine - INFO - Evaluating bbox...
2024/06/07 10:22:24 - mmengine - INFO - bbox_mAP_copypaste: 0.407 0.757 0.402 0.253 0.422 0.462
2024/06/07 10:22:24 - mmengine - INFO - Epoch(val) [36][68/68]    coco/bbox_mAP: 0.4070  coco/bbox_mAP_50: 0.7570  coco/bbox_mAP_75: 0.4020  coco/bbox_mAP_s: 0.2530  coco/bbox_mAP_m: 0.4220  coco/bbox_mAP_l: 0.4620  data_time: 0.0211  time: 0.0627

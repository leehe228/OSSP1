2024/06/07 12:49:01 - mmengine - INFO - 
------------------------------------------------------------
System environment:
    sys.platform: linux
    Python: 3.8.19 (default, Mar 20 2024, 19:58:24) [GCC 11.2.0]
    CUDA available: True
    MUSA available: False
    numpy_random_seed: 1896563543
    GPU 0: NVIDIA GeForce RTX 3070
    CUDA_HOME: /usr/local/cuda
    NVCC: Cuda compilation tools, release 11.8, V11.8.89
    GCC: gcc (Ubuntu 11.4.0-1ubuntu1~22.04) 11.4.0
    PyTorch: 2.3.0+cu118
    PyTorch compiling details: PyTorch built with:
  - GCC 9.3
  - C++ Version: 201703
  - Intel(R) oneAPI Math Kernel Library Version 2022.2-Product Build 20220804 for Intel(R) 64 architecture applications
  - Intel(R) MKL-DNN v3.3.6 (Git Hash 86e6af5974177e513fd3fee58425e1063e7f1361)
  - OpenMP 201511 (a.k.a. OpenMP 4.5)
  - LAPACK is enabled (usually provided by MKL)
  - NNPACK is enabled
  - CPU capability usage: AVX2
  - CUDA Runtime 11.8
  - NVCC architecture flags: -gencode;arch=compute_50,code=sm_50;-gencode;arch=compute_60,code=sm_60;-gencode;arch=compute_70,code=sm_70;-gencode;arch=compute_75,code=sm_75;-gencode;arch=compute_80,code=sm_80;-gencode;arch=compute_86,code=sm_86;-gencode;arch=compute_37,code=sm_37;-gencode;arch=compute_90,code=sm_90
  - CuDNN 8.7
  - Magma 2.6.1
  - Build settings: BLAS_INFO=mkl, BUILD_TYPE=Release, CUDA_VERSION=11.8, CUDNN_VERSION=8.7.0, CXX_COMPILER=/opt/rh/devtoolset-9/root/usr/bin/c++, CXX_FLAGS= -D_GLIBCXX_USE_CXX11_ABI=0 -fabi-version=11 -fvisibility-inlines-hidden -DUSE_PTHREADPOOL -DNDEBUG -DUSE_KINETO -DLIBKINETO_NOROCTRACER -DUSE_FBGEMM -DUSE_QNNPACK -DUSE_PYTORCH_QNNPACK -DUSE_XNNPACK -DSYMBOLICATE_MOBILE_DEBUG_HANDLE -O2 -fPIC -Wall -Wextra -Werror=return-type -Werror=non-virtual-dtor -Werror=bool-operation -Wnarrowing -Wno-missing-field-initializers -Wno-type-limits -Wno-array-bounds -Wno-unknown-pragmas -Wno-unused-parameter -Wno-unused-function -Wno-unused-result -Wno-strict-overflow -Wno-strict-aliasing -Wno-stringop-overflow -Wsuggest-override -Wno-psabi -Wno-error=pedantic -Wno-error=old-style-cast -Wno-missing-braces -fdiagnostics-color=always -faligned-new -Wno-unused-but-set-variable -Wno-maybe-uninitialized -fno-math-errno -fno-trapping-math -Werror=format -Wno-stringop-overflow, LAPACK_INFO=mkl, PERF_WITH_AVX=1, PERF_WITH_AVX2=1, PERF_WITH_AVX512=1, TORCH_VERSION=2.3.0, USE_CUDA=ON, USE_CUDNN=ON, USE_CUSPARSELT=1, USE_EXCEPTION_PTR=1, USE_GFLAGS=OFF, USE_GLOG=OFF, USE_GLOO=ON, USE_MKL=ON, USE_MKLDNN=ON, USE_MPI=OFF, USE_NCCL=1, USE_NNPACK=ON, USE_OPENMP=ON, USE_ROCM=OFF, USE_ROCM_KERNEL_ASSERT=OFF, 

    TorchVision: 0.18.0+cu118
    OpenCV: 4.10.0
    MMEngine: 0.10.4

Runtime environment:
    cudnn_benchmark: False
    mp_cfg: {'mp_start_method': 'fork', 'opencv_num_threads': 0}
    dist_cfg: {'backend': 'nccl'}
    seed: 1896563543
    Distributed launcher: none
    Distributed training: False
    GPU number: 1
------------------------------------------------------------

2024/06/07 12:49:01 - mmengine - INFO - Config:
auto_scale_lr = dict(base_batch_size=16, enable=True)
backend_args = None
classes = ('tooth', )
data_root = '/home/dmsai2/mmdetection/data/tooth/'
dataset_type = 'CocoDataset'
default_hooks = dict(
    checkpoint=dict(by_epoch=True, interval=8, type='CheckpointHook'),
    logger=dict(interval=50, type='LoggerHook'),
    param_scheduler=dict(type='ParamSchedulerHook'),
    sampler_seed=dict(type='DistSamplerSeedHook'),
    timer=dict(type='IterTimerHook'),
    visualization=dict(type='DetVisualizationHook'))
default_scope = 'mmdet'
env_cfg = dict(
    cudnn_benchmark=False,
    dist_cfg=dict(backend='nccl'),
    mp_cfg=dict(mp_start_method='fork', opencv_num_threads=0))
launcher = 'none'
load_from = None
log_level = 'INFO'
log_processor = dict(by_epoch=True, type='LogProcessor', window_size=50)
model = dict(
    backbone=dict(
        depth=101,
        frozen_stages=1,
        init_cfg=dict(checkpoint='torchvision://resnet101', type='Pretrained'),
        norm_cfg=dict(requires_grad=True, type='BN'),
        norm_eval=True,
        num_stages=4,
        out_indices=(
            0,
            1,
            2,
            3,
        ),
        style='pytorch',
        type='ResNet'),
    data_preprocessor=dict(
        bgr_to_rgb=True,
        mean=[
            123.675,
            116.28,
            103.53,
        ],
        pad_size_divisor=32,
        std=[
            58.395,
            57.12,
            57.375,
        ],
        type='DetDataPreprocessor'),
    neck=dict(
        in_channels=[
            256,
            512,
            1024,
            2048,
        ],
        num_outs=5,
        out_channels=256,
        type='FPN'),
    roi_head=dict(
        bbox_head=dict(
            bbox_coder=dict(
                target_means=[
                    0.0,
                    0.0,
                    0.0,
                    0.0,
                ],
                target_stds=[
                    0.1,
                    0.1,
                    0.2,
                    0.2,
                ],
                type='DeltaXYWHBBoxCoder'),
            fc_out_channels=1024,
            in_channels=256,
            loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
            loss_cls=dict(
                loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=False),
            num_classes=1,
            reg_class_agnostic=False,
            roi_feat_size=7,
            type='Shared2FCBBoxHead'),
        bbox_roi_extractor=dict(
            featmap_strides=[
                4,
                8,
                16,
                32,
            ],
            out_channels=256,
            roi_layer=dict(output_size=7, sampling_ratio=0, type='RoIAlign'),
            type='SingleRoIExtractor'),
        type='StandardRoIHead'),
    rpn_head=dict(
        anchor_generator=dict(
            ratios=[
                0.5,
                1.0,
                2.0,
            ],
            scales=[
                8,
            ],
            strides=[
                4,
                8,
                16,
                32,
                64,
            ],
            type='AnchorGenerator'),
        bbox_coder=dict(
            target_means=[
                0.0,
                0.0,
                0.0,
                0.0,
            ],
            target_stds=[
                1.0,
                1.0,
                1.0,
                1.0,
            ],
            type='DeltaXYWHBBoxCoder'),
        feat_channels=256,
        in_channels=256,
        loss_bbox=dict(loss_weight=1.0, type='L1Loss'),
        loss_cls=dict(
            loss_weight=1.0, type='CrossEntropyLoss', use_sigmoid=True),
        type='RPNHead'),
    test_cfg=dict(
        rcnn=dict(
            max_per_img=100,
            nms=dict(iou_threshold=0.5, type='nms'),
            score_thr=0.05),
        rpn=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=1000)),
    train_cfg=dict(
        rcnn=dict(
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=False,
                min_pos_iou=0.5,
                neg_iou_thr=0.5,
                pos_iou_thr=0.5,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=True,
                neg_pos_ub=-1,
                num=512,
                pos_fraction=0.25,
                type='RandomSampler')),
        rpn=dict(
            allowed_border=-1,
            assigner=dict(
                ignore_iof_thr=-1,
                match_low_quality=True,
                min_pos_iou=0.3,
                neg_iou_thr=0.3,
                pos_iou_thr=0.7,
                type='MaxIoUAssigner'),
            debug=False,
            pos_weight=-1,
            sampler=dict(
                add_gt_as_proposals=False,
                neg_pos_ub=-1,
                num=256,
                pos_fraction=0.5,
                type='RandomSampler')),
        rpn_proposal=dict(
            max_per_img=1000,
            min_bbox_size=0,
            nms=dict(iou_threshold=0.7, type='nms'),
            nms_pre=2000)),
    type='FasterRCNN')
optim_wrapper = dict(
    optimizer=dict(
        betas=(
            0.9,
            0.999,
        ), lr=0.001, type='AdamW', weight_decay=0.0001),
    type='OptimWrapper')
param_scheduler = [
    dict(
        begin=0, by_epoch=False, end=500, start_factor=0.001, type='LinearLR'),
    dict(
        begin=0,
        by_epoch=True,
        end=48,
        gamma=0.1,
        milestones=[
            16,
            22,
            36,
        ],
        type='MultiStepLR'),
]
resume = False
test_cfg = dict(type='TestLoop')
test_dataloader = dict(
    batch_size=2,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/test.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/test/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
test_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
test_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(
        meta_keys=(
            'img_id',
            'img_path',
            'ori_shape',
            'img_shape',
            'scale_factor',
        ),
        type='PackDetInputs'),
]
train_cfg = dict(max_epochs=48, type='EpochBasedTrainLoop', val_interval=1)
train_dataloader = dict(
    batch_sampler=dict(type='AspectRatioBatchSampler'),
    batch_size=16,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/train.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/train/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        filter_cfg=dict(filter_empty_gt=True, min_size=32),
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(prob=0.5, type='RandomFlip'),
            dict(cutout_shape=(
                32,
                32,
            ), n_holes=5, type='CutOut'),
            dict(type='RandomAffine'),
            dict(prob=0.5, type='Rotate'),
            dict(prob=0.5, type='TranslateX'),
            dict(prob=0.5, type='TranslateY'),
            dict(prob=0.5, type='Brightness'),
            dict(prob=0.5, type='Contrast'),
            dict(prob=0.3, type='Solarize'),
            dict(type='PackDetInputs'),
        ],
        type='CocoDataset'),
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=True, type='DefaultSampler'))
train_pipeline = [
    dict(backend_args=None, type='LoadImageFromFile'),
    dict(type='LoadAnnotations', with_bbox=True),
    dict(keep_ratio=True, scale=(
        224,
        224,
    ), type='Resize'),
    dict(prob=0.5, type='RandomFlip'),
    dict(cutout_shape=(
        32,
        32,
    ), n_holes=5, type='CutOut'),
    dict(type='RandomAffine'),
    dict(prob=0.5, type='Rotate'),
    dict(prob=0.5, type='TranslateX'),
    dict(prob=0.5, type='TranslateY'),
    dict(prob=0.5, type='Brightness'),
    dict(prob=0.5, type='Contrast'),
    dict(prob=0.3, type='Solarize'),
    dict(type='PackDetInputs'),
]
val_cfg = dict(type='ValLoop')
val_dataloader = dict(
    batch_size=4,
    dataset=dict(
        ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
        backend_args=None,
        data_prefix=dict(img='/home/dmsai2/mmdetection/data/tooth/val/'),
        data_root='/home/dmsai2/mmdetection/data/tooth/',
        metainfo=dict(classes=('tooth', )),
        pipeline=[
            dict(backend_args=None, type='LoadImageFromFile'),
            dict(keep_ratio=True, scale=(
                224,
                224,
            ), type='Resize'),
            dict(type='LoadAnnotations', with_bbox=True),
            dict(
                meta_keys=(
                    'img_id',
                    'img_path',
                    'ori_shape',
                    'img_shape',
                    'scale_factor',
                ),
                type='PackDetInputs'),
        ],
        test_mode=True,
        type='CocoDataset'),
    drop_last=False,
    num_workers=2,
    persistent_workers=True,
    sampler=dict(shuffle=False, type='DefaultSampler'))
val_evaluator = dict(
    ann_file='/home/dmsai2/mmdetection/data/tooth/annotations/val.json',
    backend_args=None,
    format_only=False,
    metric='bbox',
    type='CocoMetric')
vis_backends = [
    dict(type='LocalVisBackend'),
    dict(type='TensorboardVisBackend'),
]
visualizer = dict(
    name='visualizer',
    type='DetLocalVisualizer',
    vis_backends=[
        dict(type='LocalVisBackend'),
        dict(type='TensorboardVisBackend'),
    ])
work_dir = '/home/dmsai2/mmdetection/work_dir/'

2024/06/07 12:49:02 - mmengine - INFO - Distributed training is not used, all SyncBatchNorm (SyncBN) layers in the model will be automatically reverted to BatchNormXd layers if they are used.
2024/06/07 12:49:02 - mmengine - INFO - Hooks will be executed in the following order:
before_run:
(VERY_HIGH   ) RuntimeInfoHook                    
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
before_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_train_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DistSamplerSeedHook                
 -------------------- 
before_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_train_iter:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_train_epoch:
(NORMAL      ) IterTimerHook                      
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_val_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_val_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_val_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_val_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
(LOW         ) ParamSchedulerHook                 
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
after_val:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_train:
(VERY_HIGH   ) RuntimeInfoHook                    
(VERY_LOW    ) CheckpointHook                     
 -------------------- 
before_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
before_test_epoch:
(NORMAL      ) IterTimerHook                      
 -------------------- 
before_test_iter:
(NORMAL      ) IterTimerHook                      
 -------------------- 
after_test_iter:
(NORMAL      ) IterTimerHook                      
(NORMAL      ) DetVisualizationHook               
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test_epoch:
(VERY_HIGH   ) RuntimeInfoHook                    
(NORMAL      ) IterTimerHook                      
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
after_test:
(VERY_HIGH   ) RuntimeInfoHook                    
 -------------------- 
after_run:
(BELOW_NORMAL) LoggerHook                         
 -------------------- 
2024/06/07 12:49:03 - mmengine - INFO - LR is set based on batch size of 16 and the current batch size is 16. Scaling the original LR by 1.0.
2024/06/07 12:49:03 - mmengine - INFO - load model from: torchvision://resnet101
2024/06/07 12:49:03 - mmengine - INFO - Loads checkpoint by torchvision backend from path: torchvision://resnet101
2024/06/07 12:49:09 - mmengine - WARNING - The model and loaded state dict do not match exactly

unexpected key in source state_dict: fc.weight, fc.bias

Name of parameter - Initialization information

backbone.conv1.weight - torch.Size([64, 3, 7, 7]): 
PretrainedInit: load from torchvision://resnet101 

backbone.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.conv1.weight - torch.Size([64, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.downsample.0.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.downsample.1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.0.downsample.1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.1.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.conv1.weight - torch.Size([64, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn1.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn1.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.conv2.weight - torch.Size([64, 64, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn2.weight - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn2.bias - torch.Size([64]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.conv3.weight - torch.Size([256, 64, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn3.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer1.2.bn3.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.conv1.weight - torch.Size([128, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.downsample.0.weight - torch.Size([512, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.downsample.1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.0.downsample.1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.1.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.2.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.conv1.weight - torch.Size([128, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn1.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn1.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.conv2.weight - torch.Size([128, 128, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn2.weight - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn2.bias - torch.Size([128]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.conv3.weight - torch.Size([512, 128, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn3.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer2.3.bn3.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.conv1.weight - torch.Size([256, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.downsample.0.weight - torch.Size([1024, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.downsample.1.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.0.downsample.1.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.1.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.2.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.3.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.4.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.5.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.6.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.7.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.8.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.9.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.10.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.11.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.12.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.13.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.14.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.15.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.16.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.17.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.18.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.19.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.20.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.21.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.conv1.weight - torch.Size([256, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn1.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn1.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.conv2.weight - torch.Size([256, 256, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn2.weight - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn2.bias - torch.Size([256]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.conv3.weight - torch.Size([1024, 256, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn3.weight - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer3.22.bn3.bias - torch.Size([1024]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.conv1.weight - torch.Size([512, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.downsample.0.weight - torch.Size([2048, 1024, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.downsample.1.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.0.downsample.1.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.1.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.conv1.weight - torch.Size([512, 2048, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn1.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn1.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.conv2.weight - torch.Size([512, 512, 3, 3]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn2.weight - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn2.bias - torch.Size([512]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.conv3.weight - torch.Size([2048, 512, 1, 1]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn3.weight - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

backbone.layer4.2.bn3.bias - torch.Size([2048]): 
PretrainedInit: load from torchvision://resnet101 

neck.lateral_convs.0.conv.weight - torch.Size([256, 256, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.1.conv.weight - torch.Size([256, 512, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.2.conv.weight - torch.Size([256, 1024, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.lateral_convs.3.conv.weight - torch.Size([256, 2048, 1, 1]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.lateral_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.0.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.0.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.1.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.1.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.2.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.2.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

neck.fpn_convs.3.conv.weight - torch.Size([256, 256, 3, 3]): 
XavierInit: gain=1, distribution=uniform, bias=0 

neck.fpn_convs.3.conv.bias - torch.Size([256]): 
The value is the same before and after calling `init_weights` of FasterRCNN  

rpn_head.rpn_conv.weight - torch.Size([256, 256, 3, 3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_conv.bias - torch.Size([256]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.weight - torch.Size([3, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_cls.bias - torch.Size([3]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.weight - torch.Size([12, 256, 1, 1]): 
NormalInit: mean=0, std=0.01, bias=0 

rpn_head.rpn_reg.bias - torch.Size([12]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.weight - torch.Size([2, 1024]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_cls.bias - torch.Size([2]): 
NormalInit: mean=0, std=0.01, bias=0 

roi_head.bbox_head.fc_reg.weight - torch.Size([4, 1024]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.fc_reg.bias - torch.Size([4]): 
NormalInit: mean=0, std=0.001, bias=0 

roi_head.bbox_head.shared_fcs.0.weight - torch.Size([1024, 12544]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.0.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.weight - torch.Size([1024, 1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 

roi_head.bbox_head.shared_fcs.1.bias - torch.Size([1024]): 
XavierInit: gain=1, distribution=uniform, bias=0 
2024/06/07 12:49:09 - mmengine - WARNING - "FileClient" will be deprecated in future. Please use io functions in https://mmengine.readthedocs.io/en/latest/api/fileio.html#file-io
2024/06/07 12:49:09 - mmengine - WARNING - "HardDiskBackend" is the alias of "LocalBackend" and the former will be deprecated in future.
2024/06/07 12:49:09 - mmengine - INFO - Checkpoints will be saved to /home/dmsai2/mmdetection/work_dir.
2024/06/07 12:49:28 - mmengine - INFO - Epoch(train)  [1][ 50/129]  lr: 9.9098e-05  eta: 0:40:11  time: 0.3926  data_time: 0.0186  memory: 3197  loss: nan  loss_rpn_cls: 0.4221  loss_rpn_bbox: 0.0869  loss_cls: 0.3334  acc: 89.5752  loss_bbox: nan
2024/06/07 12:49:46 - mmengine - INFO - Epoch(train)  [1][100/129]  lr: 1.9920e-04  eta: 0:38:18  time: 0.3621  data_time: 0.0105  memory: 3197  loss: nan  loss_rpn_cls: 0.1899  loss_rpn_bbox: 0.0725  loss_cls: 0.3461  acc: 83.2520  loss_bbox: nan
2024/06/07 12:49:57 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:50:01 - mmengine - INFO - Epoch(val)  [1][50/68]    eta: 0:00:01  time: 0.0760  data_time: 0.0234  memory: 3197  
2024/06/07 12:50:02 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:50:05 - mmengine - INFO - bbox_mAP_copypaste: 0.097 0.302 0.025 0.079 0.126 0.102
2024/06/07 12:50:05 - mmengine - INFO - Epoch(val) [1][68/68]    coco/bbox_mAP: 0.0970  coco/bbox_mAP_50: 0.3020  coco/bbox_mAP_75: 0.0250  coco/bbox_mAP_s: 0.0790  coco/bbox_mAP_m: 0.1260  coco/bbox_mAP_l: 0.1020  data_time: 0.0180  time: 0.0699
2024/06/07 12:50:24 - mmengine - INFO - Epoch(train)  [2][ 50/129]  lr: 3.5736e-04  eta: 0:37:22  time: 0.3685  data_time: 0.0158  memory: 3197  loss: nan  loss_rpn_cls: 0.1318  loss_rpn_bbox: 0.0634  loss_cls: 0.3013  acc: 90.0513  loss_bbox: nan
2024/06/07 12:50:42 - mmengine - INFO - Epoch(train)  [2][100/129]  lr: 4.5746e-04  eta: 0:36:46  time: 0.3591  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.1379  loss_rpn_bbox: 0.0670  loss_cls: 0.2841  acc: 88.7207  loss_bbox: nan
2024/06/07 12:50:52 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:50:55 - mmengine - INFO - Epoch(val)  [2][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0225  memory: 3197  
2024/06/07 12:50:56 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:50:59 - mmengine - INFO - bbox_mAP_copypaste: 0.285 0.623 0.213 0.176 0.313 0.324
2024/06/07 12:50:59 - mmengine - INFO - Epoch(val) [2][68/68]    coco/bbox_mAP: 0.2850  coco/bbox_mAP_50: 0.6230  coco/bbox_mAP_75: 0.2130  coco/bbox_mAP_s: 0.1760  coco/bbox_mAP_m: 0.3130  coco/bbox_mAP_l: 0.3240  data_time: 0.0171  time: 0.0662
2024/06/07 12:51:18 - mmengine - INFO - Epoch(train)  [3][ 50/129]  lr: 6.1562e-04  eta: 0:36:01  time: 0.3653  data_time: 0.0160  memory: 3197  loss: nan  loss_rpn_cls: 0.1162  loss_rpn_bbox: 0.0613  loss_cls: 0.2637  acc: 87.1460  loss_bbox: nan
2024/06/07 12:51:35 - mmengine - INFO - Epoch(train)  [3][100/129]  lr: 7.1572e-04  eta: 0:35:35  time: 0.3576  data_time: 0.0110  memory: 3197  loss: nan  loss_rpn_cls: 0.1087  loss_rpn_bbox: 0.0575  loss_cls: 0.2509  acc: 91.1987  loss_bbox: nan
2024/06/07 12:51:46 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:51:49 - mmengine - INFO - Epoch(val)  [3][50/68]    eta: 0:00:01  time: 0.0705  data_time: 0.0240  memory: 3197  
2024/06/07 12:51:50 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:51:54 - mmengine - INFO - bbox_mAP_copypaste: 0.123 0.496 0.003 0.077 0.144 0.134
2024/06/07 12:51:54 - mmengine - INFO - Epoch(val) [3][68/68]    coco/bbox_mAP: 0.1230  coco/bbox_mAP_50: 0.4960  coco/bbox_mAP_75: 0.0030  coco/bbox_mAP_s: 0.0770  coco/bbox_mAP_m: 0.1440  coco/bbox_mAP_l: 0.1340  data_time: 0.0182  time: 0.0641
2024/06/07 12:52:12 - mmengine - INFO - Epoch(train)  [4][ 50/129]  lr: 8.7387e-04  eta: 0:35:04  time: 0.3702  data_time: 0.0174  memory: 3197  loss: nan  loss_rpn_cls: 0.1158  loss_rpn_bbox: 0.0623  loss_cls: 0.2589  acc: 91.3696  loss_bbox: nan
2024/06/07 12:52:30 - mmengine - INFO - Epoch(train)  [4][100/129]  lr: 9.7397e-04  eta: 0:34:43  time: 0.3618  data_time: 0.0122  memory: 3197  loss: nan  loss_rpn_cls: 0.1092  loss_rpn_bbox: 0.0581  loss_cls: 0.2456  acc: 92.6270  loss_bbox: nan
2024/06/07 12:52:41 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:52:44 - mmengine - INFO - Epoch(val)  [4][50/68]    eta: 0:00:01  time: 0.0705  data_time: 0.0244  memory: 3197  
2024/06/07 12:52:45 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:52:48 - mmengine - INFO - bbox_mAP_copypaste: 0.235 0.591 0.103 0.141 0.245 0.274
2024/06/07 12:52:48 - mmengine - INFO - Epoch(val) [4][68/68]    coco/bbox_mAP: 0.2350  coco/bbox_mAP_50: 0.5910  coco/bbox_mAP_75: 0.1030  coco/bbox_mAP_s: 0.1410  coco/bbox_mAP_m: 0.2450  coco/bbox_mAP_l: 0.2740  data_time: 0.0184  time: 0.0640
2024/06/07 12:53:06 - mmengine - INFO - Epoch(train)  [5][ 50/129]  lr: 1.0000e-03  eta: 0:34:12  time: 0.3668  data_time: 0.0181  memory: 3197  loss: nan  loss_rpn_cls: 0.1038  loss_rpn_bbox: 0.0557  loss_cls: 0.2413  acc: 91.0767  loss_bbox: nan
2024/06/07 12:53:24 - mmengine - INFO - Epoch(train)  [5][100/129]  lr: 1.0000e-03  eta: 0:33:52  time: 0.3604  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.1025  loss_rpn_bbox: 0.0556  loss_cls: 0.2339  acc: 90.1978  loss_bbox: nan
2024/06/07 12:53:34 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:53:38 - mmengine - INFO - Epoch(val)  [5][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0245  memory: 3197  
2024/06/07 12:53:39 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:53:41 - mmengine - INFO - bbox_mAP_copypaste: 0.266 0.647 0.128 0.189 0.262 0.300
2024/06/07 12:53:41 - mmengine - INFO - Epoch(val) [5][68/68]    coco/bbox_mAP: 0.2660  coco/bbox_mAP_50: 0.6470  coco/bbox_mAP_75: 0.1280  coco/bbox_mAP_s: 0.1890  coco/bbox_mAP_m: 0.2620  coco/bbox_mAP_l: 0.3000  data_time: 0.0185  time: 0.0652
2024/06/07 12:53:59 - mmengine - INFO - Epoch(train)  [6][ 50/129]  lr: 1.0000e-03  eta: 0:33:23  time: 0.3679  data_time: 0.0162  memory: 3197  loss: nan  loss_rpn_cls: 0.0993  loss_rpn_bbox: 0.0551  loss_cls: 0.2328  acc: 89.5874  loss_bbox: nan
2024/06/07 12:54:17 - mmengine - INFO - Epoch(train)  [6][100/129]  lr: 1.0000e-03  eta: 0:33:02  time: 0.3591  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0887  loss_rpn_bbox: 0.0527  loss_cls: 0.2208  acc: 91.2964  loss_bbox: nan
2024/06/07 12:54:27 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:54:31 - mmengine - INFO - Epoch(val)  [6][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0241  memory: 3197  
2024/06/07 12:54:32 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:54:33 - mmengine - INFO - bbox_mAP_copypaste: 0.327 0.686 0.263 0.246 0.284 0.388
2024/06/07 12:54:33 - mmengine - INFO - Epoch(val) [6][68/68]    coco/bbox_mAP: 0.3270  coco/bbox_mAP_50: 0.6860  coco/bbox_mAP_75: 0.2630  coco/bbox_mAP_s: 0.2460  coco/bbox_mAP_m: 0.2840  coco/bbox_mAP_l: 0.3880  data_time: 0.0182  time: 0.0646
2024/06/07 12:54:52 - mmengine - INFO - Epoch(train)  [7][ 50/129]  lr: 1.0000e-03  eta: 0:32:33  time: 0.3689  data_time: 0.0196  memory: 3197  loss: nan  loss_rpn_cls: 0.0929  loss_rpn_bbox: 0.0531  loss_cls: 0.2340  acc: 92.3584  loss_bbox: nan
2024/06/07 12:55:10 - mmengine - INFO - Epoch(train)  [7][100/129]  lr: 1.0000e-03  eta: 0:32:15  time: 0.3646  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.1050  loss_rpn_bbox: 0.0544  loss_cls: 0.2243  acc: 88.1592  loss_bbox: nan
2024/06/07 12:55:20 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:55:24 - mmengine - INFO - Epoch(val)  [7][50/68]    eta: 0:00:01  time: 0.0713  data_time: 0.0230  memory: 3197  
2024/06/07 12:55:25 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:55:27 - mmengine - INFO - bbox_mAP_copypaste: 0.313 0.661 0.239 0.206 0.329 0.352
2024/06/07 12:55:27 - mmengine - INFO - Epoch(val) [7][68/68]    coco/bbox_mAP: 0.3130  coco/bbox_mAP_50: 0.6610  coco/bbox_mAP_75: 0.2390  coco/bbox_mAP_s: 0.2060  coco/bbox_mAP_m: 0.3290  coco/bbox_mAP_l: 0.3520  data_time: 0.0174  time: 0.0652
2024/06/07 12:55:46 - mmengine - INFO - Epoch(train)  [8][ 50/129]  lr: 1.0000e-03  eta: 0:31:47  time: 0.3703  data_time: 0.0152  memory: 3197  loss: nan  loss_rpn_cls: 0.0909  loss_rpn_bbox: 0.0552  loss_cls: 0.2272  acc: 91.0278  loss_bbox: nan
2024/06/07 12:56:03 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:56:04 - mmengine - INFO - Epoch(train)  [8][100/129]  lr: 1.0000e-03  eta: 0:31:28  time: 0.3603  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0848  loss_rpn_bbox: 0.0489  loss_cls: 0.2088  acc: 93.3960  loss_bbox: nan
2024/06/07 12:56:14 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:56:14 - mmengine - INFO - Saving checkpoint at 8 epochs
2024/06/07 12:56:19 - mmengine - INFO - Epoch(val)  [8][50/68]    eta: 0:00:01  time: 0.0708  data_time: 0.0243  memory: 3197  
2024/06/07 12:56:20 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:56:22 - mmengine - INFO - bbox_mAP_copypaste: 0.211 0.520 0.106 0.087 0.242 0.262
2024/06/07 12:56:22 - mmengine - INFO - Epoch(val) [8][68/68]    coco/bbox_mAP: 0.2110  coco/bbox_mAP_50: 0.5200  coco/bbox_mAP_75: 0.1060  coco/bbox_mAP_s: 0.0870  coco/bbox_mAP_m: 0.2420  coco/bbox_mAP_l: 0.2620  data_time: 0.0184  time: 0.0644
2024/06/07 12:56:41 - mmengine - INFO - Epoch(train)  [9][ 50/129]  lr: 1.0000e-03  eta: 0:30:59  time: 0.3665  data_time: 0.0154  memory: 3197  loss: nan  loss_rpn_cls: 0.0773  loss_rpn_bbox: 0.0482  loss_cls: 0.2105  acc: 92.1265  loss_bbox: nan
2024/06/07 12:56:59 - mmengine - INFO - Epoch(train)  [9][100/129]  lr: 1.0000e-03  eta: 0:30:40  time: 0.3606  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0843  loss_rpn_bbox: 0.0531  loss_cls: 0.2163  acc: 93.6523  loss_bbox: nan
2024/06/07 12:57:09 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:57:13 - mmengine - INFO - Epoch(val)  [9][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0246  memory: 3197  
2024/06/07 12:57:14 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:57:15 - mmengine - INFO - bbox_mAP_copypaste: 0.241 0.624 0.110 0.140 0.255 0.277
2024/06/07 12:57:15 - mmengine - INFO - Epoch(val) [9][68/68]    coco/bbox_mAP: 0.2410  coco/bbox_mAP_50: 0.6240  coco/bbox_mAP_75: 0.1100  coco/bbox_mAP_s: 0.1400  coco/bbox_mAP_m: 0.2550  coco/bbox_mAP_l: 0.2770  data_time: 0.0186  time: 0.0645
2024/06/07 12:57:33 - mmengine - INFO - Epoch(train) [10][ 50/129]  lr: 1.0000e-03  eta: 0:30:11  time: 0.3674  data_time: 0.0165  memory: 3197  loss: nan  loss_rpn_cls: 0.0837  loss_rpn_bbox: 0.0505  loss_cls: 0.2033  acc: 92.5903  loss_bbox: nan
2024/06/07 12:57:51 - mmengine - INFO - Epoch(train) [10][100/129]  lr: 1.0000e-03  eta: 0:29:52  time: 0.3607  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0734  loss_rpn_bbox: 0.0492  loss_cls: 0.2082  acc: 93.5913  loss_bbox: nan
2024/06/07 12:58:02 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:58:05 - mmengine - INFO - Epoch(val) [10][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0235  memory: 3197  
2024/06/07 12:58:06 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:58:08 - mmengine - INFO - bbox_mAP_copypaste: 0.376 0.712 0.361 0.241 0.409 0.417
2024/06/07 12:58:08 - mmengine - INFO - Epoch(val) [10][68/68]    coco/bbox_mAP: 0.3760  coco/bbox_mAP_50: 0.7120  coco/bbox_mAP_75: 0.3610  coco/bbox_mAP_s: 0.2410  coco/bbox_mAP_m: 0.4090  coco/bbox_mAP_l: 0.4170  data_time: 0.0178  time: 0.0652
2024/06/07 12:58:26 - mmengine - INFO - Epoch(train) [11][ 50/129]  lr: 1.0000e-03  eta: 0:29:22  time: 0.3627  data_time: 0.0156  memory: 3197  loss: nan  loss_rpn_cls: 0.0824  loss_rpn_bbox: 0.0511  loss_cls: 0.2036  acc: 90.0635  loss_bbox: nan
2024/06/07 12:58:44 - mmengine - INFO - Epoch(train) [11][100/129]  lr: 1.0000e-03  eta: 0:29:03  time: 0.3582  data_time: 0.0109  memory: 3197  loss: nan  loss_rpn_cls: 0.0785  loss_rpn_bbox: 0.0492  loss_cls: 0.2102  acc: 91.3818  loss_bbox: nan
2024/06/07 12:58:54 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:58:58 - mmengine - INFO - Epoch(val) [11][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0220  memory: 3197  
2024/06/07 12:58:59 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:59:00 - mmengine - INFO - bbox_mAP_copypaste: 0.295 0.674 0.182 0.182 0.295 0.341
2024/06/07 12:59:00 - mmengine - INFO - Epoch(val) [11][68/68]    coco/bbox_mAP: 0.2950  coco/bbox_mAP_50: 0.6740  coco/bbox_mAP_75: 0.1820  coco/bbox_mAP_s: 0.1820  coco/bbox_mAP_m: 0.2950  coco/bbox_mAP_l: 0.3410  data_time: 0.0167  time: 0.0650
2024/06/07 12:59:19 - mmengine - INFO - Epoch(train) [12][ 50/129]  lr: 1.0000e-03  eta: 0:28:35  time: 0.3698  data_time: 0.0184  memory: 3197  loss: nan  loss_rpn_cls: 0.0725  loss_rpn_bbox: 0.0486  loss_cls: 0.2038  acc: 91.7358  loss_bbox: nan
2024/06/07 12:59:37 - mmengine - INFO - Epoch(train) [12][100/129]  lr: 1.0000e-03  eta: 0:28:16  time: 0.3622  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0792  loss_rpn_bbox: 0.0471  loss_cls: 0.2056  acc: 91.1011  loss_bbox: nan
2024/06/07 12:59:47 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 12:59:51 - mmengine - INFO - Epoch(val) [12][50/68]    eta: 0:00:01  time: 0.0719  data_time: 0.0252  memory: 3197  
2024/06/07 12:59:52 - mmengine - INFO - Evaluating bbox...
2024/06/07 12:59:53 - mmengine - INFO - bbox_mAP_copypaste: 0.369 0.728 0.334 0.254 0.396 0.408
2024/06/07 12:59:53 - mmengine - INFO - Epoch(val) [12][68/68]    coco/bbox_mAP: 0.3690  coco/bbox_mAP_50: 0.7280  coco/bbox_mAP_75: 0.3340  coco/bbox_mAP_s: 0.2540  coco/bbox_mAP_m: 0.3960  coco/bbox_mAP_l: 0.4080  data_time: 0.0190  time: 0.0651
2024/06/07 13:00:11 - mmengine - INFO - Epoch(train) [13][ 50/129]  lr: 1.0000e-03  eta: 0:27:47  time: 0.3656  data_time: 0.0164  memory: 3197  loss: nan  loss_rpn_cls: 0.0766  loss_rpn_bbox: 0.0483  loss_cls: 0.2001  acc: 93.9819  loss_bbox: nan
2024/06/07 13:00:30 - mmengine - INFO - Epoch(train) [13][100/129]  lr: 1.0000e-03  eta: 0:27:29  time: 0.3658  data_time: 0.0121  memory: 3197  loss: nan  loss_rpn_cls: 0.0748  loss_rpn_bbox: 0.0477  loss_cls: 0.2057  acc: 92.8101  loss_bbox: nan
2024/06/07 13:00:40 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:00:44 - mmengine - INFO - Epoch(val) [13][50/68]    eta: 0:00:01  time: 0.0716  data_time: 0.0225  memory: 3197  
2024/06/07 13:00:45 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:00:46 - mmengine - INFO - bbox_mAP_copypaste: 0.361 0.710 0.322 0.229 0.366 0.411
2024/06/07 13:00:46 - mmengine - INFO - Epoch(val) [13][68/68]    coco/bbox_mAP: 0.3610  coco/bbox_mAP_50: 0.7100  coco/bbox_mAP_75: 0.3220  coco/bbox_mAP_s: 0.2290  coco/bbox_mAP_m: 0.3660  coco/bbox_mAP_l: 0.4110  data_time: 0.0170  time: 0.0656
2024/06/07 13:01:04 - mmengine - INFO - Epoch(train) [14][ 50/129]  lr: 1.0000e-03  eta: 0:27:01  time: 0.3701  data_time: 0.0178  memory: 3197  loss: nan  loss_rpn_cls: 0.0841  loss_rpn_bbox: 0.0492  loss_cls: 0.2046  acc: 90.7227  loss_bbox: nan
2024/06/07 13:01:22 - mmengine - INFO - Epoch(train) [14][100/129]  lr: 1.0000e-03  eta: 0:26:43  time: 0.3608  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0785  loss_rpn_bbox: 0.0516  loss_cls: 0.1990  acc: 93.0420  loss_bbox: nan
2024/06/07 13:01:33 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:01:36 - mmengine - INFO - Epoch(val) [14][50/68]    eta: 0:00:01  time: 0.0717  data_time: 0.0231  memory: 3197  
2024/06/07 13:01:37 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:01:39 - mmengine - INFO - bbox_mAP_copypaste: 0.334 0.703 0.256 0.199 0.361 0.379
2024/06/07 13:01:39 - mmengine - INFO - Epoch(val) [14][68/68]    coco/bbox_mAP: 0.3340  coco/bbox_mAP_50: 0.7030  coco/bbox_mAP_75: 0.2560  coco/bbox_mAP_s: 0.1990  coco/bbox_mAP_m: 0.3610  coco/bbox_mAP_l: 0.3790  data_time: 0.0175  time: 0.0657
2024/06/07 13:01:57 - mmengine - INFO - Epoch(train) [15][ 50/129]  lr: 1.0000e-03  eta: 0:26:14  time: 0.3650  data_time: 0.0143  memory: 3197  loss: nan  loss_rpn_cls: 0.0738  loss_rpn_bbox: 0.0485  loss_cls: 0.1943  acc: 93.2983  loss_bbox: nan
2024/06/07 13:02:16 - mmengine - INFO - Epoch(train) [15][100/129]  lr: 1.0000e-03  eta: 0:25:56  time: 0.3624  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0782  loss_rpn_bbox: 0.0512  loss_cls: 0.2032  acc: 91.5771  loss_bbox: nan
2024/06/07 13:02:26 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:02:30 - mmengine - INFO - Epoch(val) [15][50/68]    eta: 0:00:01  time: 0.0710  data_time: 0.0242  memory: 3197  
2024/06/07 13:02:30 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:02:32 - mmengine - INFO - bbox_mAP_copypaste: 0.290 0.690 0.148 0.186 0.292 0.330
2024/06/07 13:02:32 - mmengine - INFO - Epoch(val) [15][68/68]    coco/bbox_mAP: 0.2900  coco/bbox_mAP_50: 0.6900  coco/bbox_mAP_75: 0.1480  coco/bbox_mAP_s: 0.1860  coco/bbox_mAP_m: 0.2920  coco/bbox_mAP_l: 0.3300  data_time: 0.0183  time: 0.0647
2024/06/07 13:02:50 - mmengine - INFO - Epoch(train) [16][ 50/129]  lr: 1.0000e-03  eta: 0:25:27  time: 0.3670  data_time: 0.0168  memory: 3197  loss: nan  loss_rpn_cls: 0.0720  loss_rpn_bbox: 0.0460  loss_cls: 0.1952  acc: 90.5640  loss_bbox: nan
2024/06/07 13:02:56 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:03:08 - mmengine - INFO - Epoch(train) [16][100/129]  lr: 1.0000e-03  eta: 0:25:08  time: 0.3590  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0746  loss_rpn_bbox: 0.0496  loss_cls: 0.1996  acc: 94.0308  loss_bbox: nan
2024/06/07 13:03:19 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:03:19 - mmengine - INFO - Saving checkpoint at 16 epochs
2024/06/07 13:03:24 - mmengine - INFO - Epoch(val) [16][50/68]    eta: 0:00:01  time: 0.0710  data_time: 0.0233  memory: 3197  
2024/06/07 13:03:25 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:03:26 - mmengine - INFO - bbox_mAP_copypaste: 0.333 0.716 0.242 0.205 0.344 0.379
2024/06/07 13:03:26 - mmengine - INFO - Epoch(val) [16][68/68]    coco/bbox_mAP: 0.3330  coco/bbox_mAP_50: 0.7160  coco/bbox_mAP_75: 0.2420  coco/bbox_mAP_s: 0.2050  coco/bbox_mAP_m: 0.3440  coco/bbox_mAP_l: 0.3790  data_time: 0.0177  time: 0.0648
2024/06/07 13:03:45 - mmengine - INFO - Epoch(train) [17][ 50/129]  lr: 1.0000e-04  eta: 0:24:40  time: 0.3683  data_time: 0.0183  memory: 3197  loss: nan  loss_rpn_cls: 0.0667  loss_rpn_bbox: 0.0442  loss_cls: 0.1885  acc: 94.2871  loss_bbox: nan
2024/06/07 13:04:03 - mmengine - INFO - Epoch(train) [17][100/129]  lr: 1.0000e-04  eta: 0:24:21  time: 0.3592  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0611  loss_rpn_bbox: 0.0425  loss_cls: 0.1716  acc: 93.4570  loss_bbox: nan
2024/06/07 13:04:13 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:04:17 - mmengine - INFO - Epoch(val) [17][50/68]    eta: 0:00:01  time: 0.0706  data_time: 0.0249  memory: 3197  
2024/06/07 13:04:18 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:04:19 - mmengine - INFO - bbox_mAP_copypaste: 0.376 0.725 0.354 0.229 0.394 0.428
2024/06/07 13:04:19 - mmengine - INFO - Epoch(val) [17][68/68]    coco/bbox_mAP: 0.3760  coco/bbox_mAP_50: 0.7250  coco/bbox_mAP_75: 0.3540  coco/bbox_mAP_s: 0.2290  coco/bbox_mAP_m: 0.3940  coco/bbox_mAP_l: 0.4280  data_time: 0.0188  time: 0.0640
2024/06/07 13:04:37 - mmengine - INFO - Epoch(train) [18][ 50/129]  lr: 1.0000e-04  eta: 0:23:53  time: 0.3648  data_time: 0.0175  memory: 3197  loss: nan  loss_rpn_cls: 0.0585  loss_rpn_bbox: 0.0414  loss_cls: 0.1697  acc: 92.2974  loss_bbox: nan
2024/06/07 13:04:55 - mmengine - INFO - Epoch(train) [18][100/129]  lr: 1.0000e-04  eta: 0:23:34  time: 0.3594  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0556  loss_rpn_bbox: 0.0388  loss_cls: 0.1649  acc: 94.0063  loss_bbox: nan
2024/06/07 13:05:05 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:05:09 - mmengine - INFO - Epoch(val) [18][50/68]    eta: 0:00:01  time: 0.0717  data_time: 0.0254  memory: 3197  
2024/06/07 13:05:10 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:05:11 - mmengine - INFO - bbox_mAP_copypaste: 0.421 0.738 0.455 0.269 0.433 0.476
2024/06/07 13:05:11 - mmengine - INFO - Epoch(val) [18][68/68]    coco/bbox_mAP: 0.4210  coco/bbox_mAP_50: 0.7380  coco/bbox_mAP_75: 0.4550  coco/bbox_mAP_s: 0.2690  coco/bbox_mAP_m: 0.4330  coco/bbox_mAP_l: 0.4760  data_time: 0.0192  time: 0.0649
2024/06/07 13:05:29 - mmengine - INFO - Epoch(train) [19][ 50/129]  lr: 1.0000e-04  eta: 0:23:05  time: 0.3653  data_time: 0.0172  memory: 3197  loss: nan  loss_rpn_cls: 0.0561  loss_rpn_bbox: 0.0403  loss_cls: 0.1667  acc: 93.3228  loss_bbox: nan
2024/06/07 13:05:47 - mmengine - INFO - Epoch(train) [19][100/129]  lr: 1.0000e-04  eta: 0:22:47  time: 0.3606  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0565  loss_rpn_bbox: 0.0395  loss_cls: 0.1689  acc: 92.8833  loss_bbox: nan
2024/06/07 13:05:58 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:06:01 - mmengine - INFO - Epoch(val) [19][50/68]    eta: 0:00:01  time: 0.0715  data_time: 0.0248  memory: 3197  
2024/06/07 13:06:02 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:06:03 - mmengine - INFO - bbox_mAP_copypaste: 0.384 0.726 0.377 0.233 0.400 0.438
2024/06/07 13:06:03 - mmengine - INFO - Epoch(val) [19][68/68]    coco/bbox_mAP: 0.3840  coco/bbox_mAP_50: 0.7260  coco/bbox_mAP_75: 0.3770  coco/bbox_mAP_s: 0.2330  coco/bbox_mAP_m: 0.4000  coco/bbox_mAP_l: 0.4380  data_time: 0.0188  time: 0.0648
2024/06/07 13:06:21 - mmengine - INFO - Epoch(train) [20][ 50/129]  lr: 1.0000e-04  eta: 0:22:18  time: 0.3660  data_time: 0.0170  memory: 3197  loss: nan  loss_rpn_cls: 0.0589  loss_rpn_bbox: 0.0393  loss_cls: 0.1700  acc: 92.5537  loss_bbox: nan
2024/06/07 13:06:40 - mmengine - INFO - Epoch(train) [20][100/129]  lr: 1.0000e-04  eta: 0:22:00  time: 0.3605  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0515  loss_rpn_bbox: 0.0384  loss_cls: 0.1593  acc: 93.4570  loss_bbox: nan
2024/06/07 13:06:50 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:06:53 - mmengine - INFO - Epoch(val) [20][50/68]    eta: 0:00:01  time: 0.0707  data_time: 0.0246  memory: 3197  
2024/06/07 13:06:54 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:06:55 - mmengine - INFO - bbox_mAP_copypaste: 0.372 0.729 0.335 0.228 0.379 0.426
2024/06/07 13:06:55 - mmengine - INFO - Epoch(val) [20][68/68]    coco/bbox_mAP: 0.3720  coco/bbox_mAP_50: 0.7290  coco/bbox_mAP_75: 0.3350  coco/bbox_mAP_s: 0.2280  coco/bbox_mAP_m: 0.3790  coco/bbox_mAP_l: 0.4260  data_time: 0.0186  time: 0.0641
2024/06/07 13:07:14 - mmengine - INFO - Epoch(train) [21][ 50/129]  lr: 1.0000e-04  eta: 0:21:32  time: 0.3679  data_time: 0.0160  memory: 3197  loss: nan  loss_rpn_cls: 0.0552  loss_rpn_bbox: 0.0394  loss_cls: 0.1629  acc: 94.4336  loss_bbox: nan
2024/06/07 13:07:32 - mmengine - INFO - Epoch(train) [21][100/129]  lr: 1.0000e-04  eta: 0:21:13  time: 0.3609  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0517  loss_rpn_bbox: 0.0393  loss_cls: 0.1612  acc: 93.1274  loss_bbox: nan
2024/06/07 13:07:42 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:07:46 - mmengine - INFO - Epoch(val) [21][50/68]    eta: 0:00:01  time: 0.0710  data_time: 0.0242  memory: 3197  
2024/06/07 13:07:47 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:07:48 - mmengine - INFO - bbox_mAP_copypaste: 0.392 0.723 0.386 0.238 0.406 0.448
2024/06/07 13:07:48 - mmengine - INFO - Epoch(val) [21][68/68]    coco/bbox_mAP: 0.3920  coco/bbox_mAP_50: 0.7230  coco/bbox_mAP_75: 0.3860  coco/bbox_mAP_s: 0.2380  coco/bbox_mAP_m: 0.4060  coco/bbox_mAP_l: 0.4480  data_time: 0.0183  time: 0.0645
2024/06/07 13:08:06 - mmengine - INFO - Epoch(train) [22][ 50/129]  lr: 1.0000e-04  eta: 0:20:44  time: 0.3661  data_time: 0.0149  memory: 3197  loss: nan  loss_rpn_cls: 0.0547  loss_rpn_bbox: 0.0384  loss_cls: 0.1609  acc: 93.3105  loss_bbox: nan
2024/06/07 13:08:24 - mmengine - INFO - Epoch(train) [22][100/129]  lr: 1.0000e-04  eta: 0:20:26  time: 0.3599  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0516  loss_rpn_bbox: 0.0386  loss_cls: 0.1579  acc: 93.3716  loss_bbox: nan
2024/06/07 13:08:34 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:08:38 - mmengine - INFO - Epoch(val) [22][50/68]    eta: 0:00:01  time: 0.0715  data_time: 0.0248  memory: 3197  
2024/06/07 13:08:39 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:08:40 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.739 0.394 0.255 0.386 0.456
2024/06/07 13:08:40 - mmengine - INFO - Epoch(val) [22][68/68]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.7390  coco/bbox_mAP_75: 0.3940  coco/bbox_mAP_s: 0.2550  coco/bbox_mAP_m: 0.3860  coco/bbox_mAP_l: 0.4560  data_time: 0.0187  time: 0.0650
2024/06/07 13:08:58 - mmengine - INFO - Epoch(train) [23][ 50/129]  lr: 1.0000e-05  eta: 0:19:57  time: 0.3636  data_time: 0.0149  memory: 3197  loss: nan  loss_rpn_cls: 0.0528  loss_rpn_bbox: 0.0380  loss_cls: 0.1588  acc: 91.4551  loss_bbox: nan
2024/06/07 13:09:16 - mmengine - INFO - Epoch(train) [23][100/129]  lr: 1.0000e-05  eta: 0:19:39  time: 0.3603  data_time: 0.0105  memory: 3197  loss: nan  loss_rpn_cls: 0.0521  loss_rpn_bbox: 0.0391  loss_cls: 0.1600  acc: 92.6514  loss_bbox: nan
2024/06/07 13:09:26 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:09:30 - mmengine - INFO - Epoch(val) [23][50/68]    eta: 0:00:01  time: 0.0712  data_time: 0.0249  memory: 3197  
2024/06/07 13:09:31 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:09:32 - mmengine - INFO - bbox_mAP_copypaste: 0.388 0.735 0.375 0.241 0.393 0.446
2024/06/07 13:09:32 - mmengine - INFO - Epoch(val) [23][68/68]    coco/bbox_mAP: 0.3880  coco/bbox_mAP_50: 0.7350  coco/bbox_mAP_75: 0.3750  coco/bbox_mAP_s: 0.2410  coco/bbox_mAP_m: 0.3930  coco/bbox_mAP_l: 0.4460  data_time: 0.0188  time: 0.0650
2024/06/07 13:09:44 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:09:50 - mmengine - INFO - Epoch(train) [24][ 50/129]  lr: 1.0000e-05  eta: 0:19:10  time: 0.3629  data_time: 0.0168  memory: 3197  loss: nan  loss_rpn_cls: 0.0532  loss_rpn_bbox: 0.0372  loss_cls: 0.1534  acc: 94.5923  loss_bbox: nan
2024/06/07 13:10:08 - mmengine - INFO - Epoch(train) [24][100/129]  lr: 1.0000e-05  eta: 0:18:52  time: 0.3609  data_time: 0.0105  memory: 3197  loss: nan  loss_rpn_cls: 0.0492  loss_rpn_bbox: 0.0385  loss_cls: 0.1589  acc: 92.1631  loss_bbox: nan
2024/06/07 13:10:18 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:10:18 - mmengine - INFO - Saving checkpoint at 24 epochs
2024/06/07 13:10:24 - mmengine - INFO - Epoch(val) [24][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0244  memory: 3197  
2024/06/07 13:10:25 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:10:26 - mmengine - INFO - bbox_mAP_copypaste: 0.390 0.734 0.378 0.238 0.396 0.448
2024/06/07 13:10:26 - mmengine - INFO - Epoch(val) [24][68/68]    coco/bbox_mAP: 0.3900  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3780  coco/bbox_mAP_s: 0.2380  coco/bbox_mAP_m: 0.3960  coco/bbox_mAP_l: 0.4480  data_time: 0.0185  time: 0.0649
2024/06/07 13:10:44 - mmengine - INFO - Epoch(train) [25][ 50/129]  lr: 1.0000e-05  eta: 0:18:23  time: 0.3649  data_time: 0.0164  memory: 3197  loss: nan  loss_rpn_cls: 0.0490  loss_rpn_bbox: 0.0366  loss_cls: 0.1523  acc: 92.6636  loss_bbox: nan
2024/06/07 13:11:02 - mmengine - INFO - Epoch(train) [25][100/129]  lr: 1.0000e-05  eta: 0:18:05  time: 0.3609  data_time: 0.0109  memory: 3197  loss: nan  loss_rpn_cls: 0.0512  loss_rpn_bbox: 0.0369  loss_cls: 0.1592  acc: 93.2861  loss_bbox: nan
2024/06/07 13:11:12 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:11:16 - mmengine - INFO - Epoch(val) [25][50/68]    eta: 0:00:01  time: 0.0716  data_time: 0.0241  memory: 3197  
2024/06/07 13:11:17 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:11:18 - mmengine - INFO - bbox_mAP_copypaste: 0.398 0.736 0.395 0.248 0.412 0.454
2024/06/07 13:11:18 - mmengine - INFO - Epoch(val) [25][68/68]    coco/bbox_mAP: 0.3980  coco/bbox_mAP_50: 0.7360  coco/bbox_mAP_75: 0.3950  coco/bbox_mAP_s: 0.2480  coco/bbox_mAP_m: 0.4120  coco/bbox_mAP_l: 0.4540  data_time: 0.0182  time: 0.0652
2024/06/07 13:11:36 - mmengine - INFO - Epoch(train) [26][ 50/129]  lr: 1.0000e-05  eta: 0:17:37  time: 0.3663  data_time: 0.0193  memory: 3197  loss: nan  loss_rpn_cls: 0.0485  loss_rpn_bbox: 0.0363  loss_cls: 0.1487  acc: 93.3105  loss_bbox: nan
2024/06/07 13:11:54 - mmengine - INFO - Epoch(train) [26][100/129]  lr: 1.0000e-05  eta: 0:17:18  time: 0.3610  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0520  loss_rpn_bbox: 0.0394  loss_cls: 0.1585  acc: 93.4937  loss_bbox: nan
2024/06/07 13:12:05 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:12:08 - mmengine - INFO - Epoch(val) [26][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0249  memory: 3197  
2024/06/07 13:12:09 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:12:10 - mmengine - INFO - bbox_mAP_copypaste: 0.381 0.733 0.358 0.228 0.390 0.439
2024/06/07 13:12:10 - mmengine - INFO - Epoch(val) [26][68/68]    coco/bbox_mAP: 0.3810  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3580  coco/bbox_mAP_s: 0.2280  coco/bbox_mAP_m: 0.3900  coco/bbox_mAP_l: 0.4390  data_time: 0.0188  time: 0.0647
2024/06/07 13:12:28 - mmengine - INFO - Epoch(train) [27][ 50/129]  lr: 1.0000e-05  eta: 0:16:50  time: 0.3629  data_time: 0.0163  memory: 3197  loss: nan  loss_rpn_cls: 0.0512  loss_rpn_bbox: 0.0360  loss_cls: 0.1559  acc: 94.1895  loss_bbox: nan
2024/06/07 13:12:46 - mmengine - INFO - Epoch(train) [27][100/129]  lr: 1.0000e-05  eta: 0:16:31  time: 0.3599  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0531  loss_rpn_bbox: 0.0371  loss_cls: 0.1543  acc: 92.7856  loss_bbox: nan
2024/06/07 13:12:57 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:13:00 - mmengine - INFO - Epoch(val) [27][50/68]    eta: 0:00:01  time: 0.0717  data_time: 0.0237  memory: 3197  
2024/06/07 13:13:01 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:13:02 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.733 0.395 0.244 0.404 0.459
2024/06/07 13:13:02 - mmengine - INFO - Epoch(val) [27][68/68]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3950  coco/bbox_mAP_s: 0.2440  coco/bbox_mAP_m: 0.4040  coco/bbox_mAP_l: 0.4590  data_time: 0.0179  time: 0.0649
2024/06/07 13:13:21 - mmengine - INFO - Epoch(train) [28][ 50/129]  lr: 1.0000e-05  eta: 0:16:03  time: 0.3680  data_time: 0.0187  memory: 3197  loss: nan  loss_rpn_cls: 0.0506  loss_rpn_bbox: 0.0373  loss_cls: 0.1542  acc: 94.9585  loss_bbox: nan
2024/06/07 13:13:39 - mmengine - INFO - Epoch(train) [28][100/129]  lr: 1.0000e-05  eta: 0:15:45  time: 0.3623  data_time: 0.0121  memory: 3197  loss: nan  loss_rpn_cls: 0.0528  loss_rpn_bbox: 0.0382  loss_cls: 0.1554  acc: 93.9941  loss_bbox: nan
2024/06/07 13:13:49 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:13:52 - mmengine - INFO - Epoch(val) [28][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0247  memory: 3197  
2024/06/07 13:13:53 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:13:54 - mmengine - INFO - bbox_mAP_copypaste: 0.396 0.734 0.396 0.248 0.404 0.452
2024/06/07 13:13:54 - mmengine - INFO - Epoch(val) [28][68/68]    coco/bbox_mAP: 0.3960  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3960  coco/bbox_mAP_s: 0.2480  coco/bbox_mAP_m: 0.4040  coco/bbox_mAP_l: 0.4520  data_time: 0.0187  time: 0.0649
2024/06/07 13:14:13 - mmengine - INFO - Epoch(train) [29][ 50/129]  lr: 1.0000e-05  eta: 0:15:16  time: 0.3628  data_time: 0.0155  memory: 3197  loss: nan  loss_rpn_cls: 0.0471  loss_rpn_bbox: 0.0381  loss_cls: 0.1539  acc: 93.1030  loss_bbox: nan
2024/06/07 13:14:30 - mmengine - INFO - Epoch(train) [29][100/129]  lr: 1.0000e-05  eta: 0:14:58  time: 0.3574  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0513  loss_rpn_bbox: 0.0352  loss_cls: 0.1536  acc: 92.9077  loss_bbox: nan
2024/06/07 13:14:41 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:14:44 - mmengine - INFO - Epoch(val) [29][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0241  memory: 3197  
2024/06/07 13:14:45 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:14:46 - mmengine - INFO - bbox_mAP_copypaste: 0.374 0.731 0.340 0.226 0.383 0.431
2024/06/07 13:14:46 - mmengine - INFO - Epoch(val) [29][68/68]    coco/bbox_mAP: 0.3740  coco/bbox_mAP_50: 0.7310  coco/bbox_mAP_75: 0.3400  coco/bbox_mAP_s: 0.2260  coco/bbox_mAP_m: 0.3830  coco/bbox_mAP_l: 0.4310  data_time: 0.0182  time: 0.0646
2024/06/07 13:15:04 - mmengine - INFO - Epoch(train) [30][ 50/129]  lr: 1.0000e-05  eta: 0:14:29  time: 0.3615  data_time: 0.0160  memory: 3197  loss: nan  loss_rpn_cls: 0.0523  loss_rpn_bbox: 0.0385  loss_cls: 0.1530  acc: 94.9707  loss_bbox: nan
2024/06/07 13:15:22 - mmengine - INFO - Epoch(train) [30][100/129]  lr: 1.0000e-05  eta: 0:14:11  time: 0.3566  data_time: 0.0100  memory: 3197  loss: nan  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.0369  loss_cls: 0.1583  acc: 92.8101  loss_bbox: nan
2024/06/07 13:15:32 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:15:36 - mmengine - INFO - Epoch(val) [30][50/68]    eta: 0:00:01  time: 0.0707  data_time: 0.0246  memory: 3197  
2024/06/07 13:15:37 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:15:38 - mmengine - INFO - bbox_mAP_copypaste: 0.402 0.732 0.412 0.251 0.410 0.459
2024/06/07 13:15:38 - mmengine - INFO - Epoch(val) [30][68/68]    coco/bbox_mAP: 0.4020  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.4120  coco/bbox_mAP_s: 0.2510  coco/bbox_mAP_m: 0.4100  coco/bbox_mAP_l: 0.4590  data_time: 0.0186  time: 0.0643
2024/06/07 13:15:56 - mmengine - INFO - Epoch(train) [31][ 50/129]  lr: 1.0000e-05  eta: 0:13:42  time: 0.3653  data_time: 0.0177  memory: 3197  loss: nan  loss_rpn_cls: 0.0514  loss_rpn_bbox: 0.0397  loss_cls: 0.1601  acc: 93.0420  loss_bbox: nan
2024/06/07 13:16:14 - mmengine - INFO - Epoch(train) [31][100/129]  lr: 1.0000e-05  eta: 0:13:24  time: 0.3600  data_time: 0.0105  memory: 3197  loss: nan  loss_rpn_cls: 0.0494  loss_rpn_bbox: 0.0379  loss_cls: 0.1565  acc: 95.0684  loss_bbox: nan
2024/06/07 13:16:24 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:16:28 - mmengine - INFO - Epoch(val) [31][50/68]    eta: 0:00:01  time: 0.0712  data_time: 0.0232  memory: 3197  
2024/06/07 13:16:29 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:16:30 - mmengine - INFO - bbox_mAP_copypaste: 0.387 0.732 0.377 0.238 0.396 0.444
2024/06/07 13:16:30 - mmengine - INFO - Epoch(val) [31][68/68]    coco/bbox_mAP: 0.3870  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.3770  coco/bbox_mAP_s: 0.2380  coco/bbox_mAP_m: 0.3960  coco/bbox_mAP_l: 0.4440  data_time: 0.0176  time: 0.0650
2024/06/07 13:16:31 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:16:49 - mmengine - INFO - Epoch(train) [32][ 50/129]  lr: 1.0000e-05  eta: 0:12:55  time: 0.3712  data_time: 0.0210  memory: 3197  loss: nan  loss_rpn_cls: 0.0507  loss_rpn_bbox: 0.0376  loss_cls: 0.1579  acc: 94.8120  loss_bbox: nan
2024/06/07 13:17:06 - mmengine - INFO - Epoch(train) [32][100/129]  lr: 1.0000e-05  eta: 0:12:37  time: 0.3560  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0509  loss_rpn_bbox: 0.0366  loss_cls: 0.1545  acc: 92.9932  loss_bbox: nan
2024/06/07 13:17:17 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:17:17 - mmengine - INFO - Saving checkpoint at 32 epochs
2024/06/07 13:17:22 - mmengine - INFO - Epoch(val) [32][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0248  memory: 3197  
2024/06/07 13:17:23 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:17:24 - mmengine - INFO - bbox_mAP_copypaste: 0.397 0.739 0.394 0.247 0.402 0.453
2024/06/07 13:17:24 - mmengine - INFO - Epoch(val) [32][68/68]    coco/bbox_mAP: 0.3970  coco/bbox_mAP_50: 0.7390  coco/bbox_mAP_75: 0.3940  coco/bbox_mAP_s: 0.2470  coco/bbox_mAP_m: 0.4020  coco/bbox_mAP_l: 0.4530  data_time: 0.0187  time: 0.0648
2024/06/07 13:17:42 - mmengine - INFO - Epoch(train) [33][ 50/129]  lr: 1.0000e-05  eta: 0:12:08  time: 0.3633  data_time: 0.0151  memory: 3197  loss: nan  loss_rpn_cls: 0.0493  loss_rpn_bbox: 0.0383  loss_cls: 0.1548  acc: 93.0298  loss_bbox: nan
2024/06/07 13:18:00 - mmengine - INFO - Epoch(train) [33][100/129]  lr: 1.0000e-05  eta: 0:11:50  time: 0.3569  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0492  loss_rpn_bbox: 0.0369  loss_cls: 0.1507  acc: 94.4458  loss_bbox: nan
2024/06/07 13:18:10 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:18:14 - mmengine - INFO - Epoch(val) [33][50/68]    eta: 0:00:01  time: 0.0708  data_time: 0.0247  memory: 3197  
2024/06/07 13:18:14 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:18:16 - mmengine - INFO - bbox_mAP_copypaste: 0.391 0.730 0.387 0.243 0.397 0.446
2024/06/07 13:18:16 - mmengine - INFO - Epoch(val) [33][68/68]    coco/bbox_mAP: 0.3910  coco/bbox_mAP_50: 0.7300  coco/bbox_mAP_75: 0.3870  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.3970  coco/bbox_mAP_l: 0.4460  data_time: 0.0187  time: 0.0643
2024/06/07 13:18:34 - mmengine - INFO - Epoch(train) [34][ 50/129]  lr: 1.0000e-05  eta: 0:11:22  time: 0.3703  data_time: 0.0222  memory: 3197  loss: nan  loss_rpn_cls: 0.0521  loss_rpn_bbox: 0.0382  loss_cls: 0.1567  acc: 92.1387  loss_bbox: nan
2024/06/07 13:18:52 - mmengine - INFO - Epoch(train) [34][100/129]  lr: 1.0000e-05  eta: 0:11:03  time: 0.3551  data_time: 0.0101  memory: 3197  loss: nan  loss_rpn_cls: 0.0507  loss_rpn_bbox: 0.0378  loss_cls: 0.1554  acc: 93.1885  loss_bbox: nan
2024/06/07 13:19:02 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:19:06 - mmengine - INFO - Epoch(val) [34][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0248  memory: 3197  
2024/06/07 13:19:07 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:19:08 - mmengine - INFO - bbox_mAP_copypaste: 0.388 0.736 0.376 0.237 0.399 0.444
2024/06/07 13:19:08 - mmengine - INFO - Epoch(val) [34][68/68]    coco/bbox_mAP: 0.3880  coco/bbox_mAP_50: 0.7360  coco/bbox_mAP_75: 0.3760  coco/bbox_mAP_s: 0.2370  coco/bbox_mAP_m: 0.3990  coco/bbox_mAP_l: 0.4440  data_time: 0.0187  time: 0.0643
2024/06/07 13:19:26 - mmengine - INFO - Epoch(train) [35][ 50/129]  lr: 1.0000e-05  eta: 0:10:35  time: 0.3604  data_time: 0.0165  memory: 3197  loss: nan  loss_rpn_cls: 0.0490  loss_rpn_bbox: 0.0366  loss_cls: 0.1536  acc: 93.4937  loss_bbox: nan
2024/06/07 13:19:44 - mmengine - INFO - Epoch(train) [35][100/129]  lr: 1.0000e-05  eta: 0:10:17  time: 0.3612  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0485  loss_rpn_bbox: 0.0360  loss_cls: 0.1573  acc: 92.6025  loss_bbox: nan
2024/06/07 13:19:54 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:19:58 - mmengine - INFO - Epoch(val) [35][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0230  memory: 3197  
2024/06/07 13:19:58 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:20:00 - mmengine - INFO - bbox_mAP_copypaste: 0.393 0.733 0.383 0.239 0.402 0.452
2024/06/07 13:20:00 - mmengine - INFO - Epoch(val) [35][68/68]    coco/bbox_mAP: 0.3930  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3830  coco/bbox_mAP_s: 0.2390  coco/bbox_mAP_m: 0.4020  coco/bbox_mAP_l: 0.4520  data_time: 0.0174  time: 0.0649
2024/06/07 13:20:18 - mmengine - INFO - Epoch(train) [36][ 50/129]  lr: 1.0000e-05  eta: 0:09:48  time: 0.3689  data_time: 0.0158  memory: 3197  loss: nan  loss_rpn_cls: 0.0502  loss_rpn_bbox: 0.0367  loss_cls: 0.1548  acc: 93.0420  loss_bbox: nan
2024/06/07 13:20:36 - mmengine - INFO - Epoch(train) [36][100/129]  lr: 1.0000e-05  eta: 0:09:30  time: 0.3583  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0481  loss_rpn_bbox: 0.0367  loss_cls: 0.1499  acc: 92.8467  loss_bbox: nan
2024/06/07 13:20:46 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:20:50 - mmengine - INFO - Epoch(val) [36][50/68]    eta: 0:00:01  time: 0.0717  data_time: 0.0244  memory: 3197  
2024/06/07 13:20:51 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:20:52 - mmengine - INFO - bbox_mAP_copypaste: 0.390 0.734 0.380 0.244 0.396 0.446
2024/06/07 13:20:52 - mmengine - INFO - Epoch(val) [36][68/68]    coco/bbox_mAP: 0.3900  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3800  coco/bbox_mAP_s: 0.2440  coco/bbox_mAP_m: 0.3960  coco/bbox_mAP_l: 0.4460  data_time: 0.0184  time: 0.0651
2024/06/07 13:21:10 - mmengine - INFO - Epoch(train) [37][ 50/129]  lr: 1.0000e-06  eta: 0:09:01  time: 0.3706  data_time: 0.0206  memory: 3197  loss: nan  loss_rpn_cls: 0.0501  loss_rpn_bbox: 0.0385  loss_cls: 0.1522  acc: 94.4092  loss_bbox: nan
2024/06/07 13:21:29 - mmengine - INFO - Epoch(train) [37][100/129]  lr: 1.0000e-06  eta: 0:08:43  time: 0.3637  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0505  loss_rpn_bbox: 0.0365  loss_cls: 0.1504  acc: 92.7002  loss_bbox: nan
2024/06/07 13:21:39 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:21:43 - mmengine - INFO - Epoch(val) [37][50/68]    eta: 0:00:01  time: 0.0715  data_time: 0.0243  memory: 3197  
2024/06/07 13:21:43 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:21:45 - mmengine - INFO - bbox_mAP_copypaste: 0.389 0.735 0.380 0.241 0.395 0.446
2024/06/07 13:21:45 - mmengine - INFO - Epoch(val) [37][68/68]    coco/bbox_mAP: 0.3890  coco/bbox_mAP_50: 0.7350  coco/bbox_mAP_75: 0.3800  coco/bbox_mAP_s: 0.2410  coco/bbox_mAP_m: 0.3950  coco/bbox_mAP_l: 0.4460  data_time: 0.0184  time: 0.0649
2024/06/07 13:22:03 - mmengine - INFO - Epoch(train) [38][ 50/129]  lr: 1.0000e-06  eta: 0:08:15  time: 0.3639  data_time: 0.0137  memory: 3197  loss: nan  loss_rpn_cls: 0.0510  loss_rpn_bbox: 0.0370  loss_cls: 0.1530  acc: 94.4214  loss_bbox: nan
2024/06/07 13:22:21 - mmengine - INFO - Epoch(train) [38][100/129]  lr: 1.0000e-06  eta: 0:07:57  time: 0.3597  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0475  loss_rpn_bbox: 0.0364  loss_cls: 0.1503  acc: 93.9087  loss_bbox: nan
2024/06/07 13:22:31 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:22:35 - mmengine - INFO - Epoch(val) [38][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0246  memory: 3197  
2024/06/07 13:22:36 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:22:37 - mmengine - INFO - bbox_mAP_copypaste: 0.390 0.734 0.380 0.242 0.398 0.447
2024/06/07 13:22:37 - mmengine - INFO - Epoch(val) [38][68/68]    coco/bbox_mAP: 0.3900  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3800  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.3980  coco/bbox_mAP_l: 0.4470  data_time: 0.0187  time: 0.0646
2024/06/07 13:22:55 - mmengine - INFO - Epoch(train) [39][ 50/129]  lr: 1.0000e-06  eta: 0:07:28  time: 0.3675  data_time: 0.0168  memory: 3197  loss: nan  loss_rpn_cls: 0.0482  loss_rpn_bbox: 0.0377  loss_cls: 0.1549  acc: 94.0430  loss_bbox: nan
2024/06/07 13:23:12 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:23:13 - mmengine - INFO - Epoch(train) [39][100/129]  lr: 1.0000e-06  eta: 0:07:10  time: 0.3599  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0496  loss_rpn_bbox: 0.0359  loss_cls: 0.1538  acc: 93.4937  loss_bbox: nan
2024/06/07 13:23:23 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:23:27 - mmengine - INFO - Epoch(val) [39][50/68]    eta: 0:00:01  time: 0.0714  data_time: 0.0236  memory: 3197  
2024/06/07 13:23:28 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:23:29 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.734 0.388 0.242 0.406 0.451
2024/06/07 13:23:29 - mmengine - INFO - Epoch(val) [39][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3880  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.4060  coco/bbox_mAP_l: 0.4510  data_time: 0.0179  time: 0.0651
2024/06/07 13:23:47 - mmengine - INFO - Epoch(train) [40][ 50/129]  lr: 1.0000e-06  eta: 0:06:41  time: 0.3642  data_time: 0.0161  memory: 3197  loss: nan  loss_rpn_cls: 0.0456  loss_rpn_bbox: 0.0358  loss_cls: 0.1502  acc: 94.2383  loss_bbox: nan
2024/06/07 13:24:05 - mmengine - INFO - Epoch(train) [40][100/129]  lr: 1.0000e-06  eta: 0:06:23  time: 0.3569  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0507  loss_rpn_bbox: 0.0365  loss_cls: 0.1548  acc: 95.9717  loss_bbox: nan
2024/06/07 13:24:15 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:24:15 - mmengine - INFO - Saving checkpoint at 40 epochs
2024/06/07 13:24:20 - mmengine - INFO - Epoch(val) [40][50/68]    eta: 0:00:01  time: 0.0717  data_time: 0.0252  memory: 3197  
2024/06/07 13:24:21 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:24:22 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.735 0.389 0.244 0.407 0.449
2024/06/07 13:24:22 - mmengine - INFO - Epoch(val) [40][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7350  coco/bbox_mAP_75: 0.3890  coco/bbox_mAP_s: 0.2440  coco/bbox_mAP_m: 0.4070  coco/bbox_mAP_l: 0.4490  data_time: 0.0191  time: 0.0649
2024/06/07 13:24:40 - mmengine - INFO - Epoch(train) [41][ 50/129]  lr: 1.0000e-06  eta: 0:05:55  time: 0.3639  data_time: 0.0173  memory: 3197  loss: nan  loss_rpn_cls: 0.0484  loss_rpn_bbox: 0.0368  loss_cls: 0.1490  acc: 94.8853  loss_bbox: nan
2024/06/07 13:24:58 - mmengine - INFO - Epoch(train) [41][100/129]  lr: 1.0000e-06  eta: 0:05:37  time: 0.3573  data_time: 0.0105  memory: 3197  loss: nan  loss_rpn_cls: 0.0463  loss_rpn_bbox: 0.0374  loss_cls: 0.1522  acc: 93.8110  loss_bbox: nan
2024/06/07 13:25:08 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:25:12 - mmengine - INFO - Epoch(val) [41][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0239  memory: 3197  
2024/06/07 13:25:13 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:25:14 - mmengine - INFO - bbox_mAP_copypaste: 0.395 0.734 0.391 0.245 0.405 0.453
2024/06/07 13:25:14 - mmengine - INFO - Epoch(val) [41][68/68]    coco/bbox_mAP: 0.3950  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3910  coco/bbox_mAP_s: 0.2450  coco/bbox_mAP_m: 0.4050  coco/bbox_mAP_l: 0.4530  data_time: 0.0181  time: 0.0647
2024/06/07 13:25:33 - mmengine - INFO - Epoch(train) [42][ 50/129]  lr: 1.0000e-06  eta: 0:05:08  time: 0.3722  data_time: 0.0198  memory: 3197  loss: nan  loss_rpn_cls: 0.0520  loss_rpn_bbox: 0.0365  loss_cls: 0.1514  acc: 94.9097  loss_bbox: nan
2024/06/07 13:25:51 - mmengine - INFO - Epoch(train) [42][100/129]  lr: 1.0000e-06  eta: 0:04:50  time: 0.3607  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0475  loss_rpn_bbox: 0.0377  loss_cls: 0.1542  acc: 92.7368  loss_bbox: nan
2024/06/07 13:26:01 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:26:04 - mmengine - INFO - Epoch(val) [42][50/68]    eta: 0:00:01  time: 0.0712  data_time: 0.0229  memory: 3197  
2024/06/07 13:26:05 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:26:06 - mmengine - INFO - bbox_mAP_copypaste: 0.390 0.734 0.380 0.242 0.399 0.448
2024/06/07 13:26:06 - mmengine - INFO - Epoch(val) [42][68/68]    coco/bbox_mAP: 0.3900  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3800  coco/bbox_mAP_s: 0.2420  coco/bbox_mAP_m: 0.3990  coco/bbox_mAP_l: 0.4480  data_time: 0.0174  time: 0.0650
2024/06/07 13:26:25 - mmengine - INFO - Epoch(train) [43][ 50/129]  lr: 1.0000e-06  eta: 0:04:21  time: 0.3682  data_time: 0.0171  memory: 3197  loss: nan  loss_rpn_cls: 0.0505  loss_rpn_bbox: 0.0379  loss_cls: 0.1547  acc: 92.5903  loss_bbox: nan
2024/06/07 13:26:43 - mmengine - INFO - Epoch(train) [43][100/129]  lr: 1.0000e-06  eta: 0:04:03  time: 0.3576  data_time: 0.0106  memory: 3197  loss: nan  loss_rpn_cls: 0.0503  loss_rpn_bbox: 0.0385  loss_cls: 0.1547  acc: 93.4570  loss_bbox: nan
2024/06/07 13:26:53 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:26:57 - mmengine - INFO - Epoch(val) [43][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0241  memory: 3197  
2024/06/07 13:26:57 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:26:59 - mmengine - INFO - bbox_mAP_copypaste: 0.390 0.732 0.381 0.239 0.400 0.449
2024/06/07 13:26:59 - mmengine - INFO - Epoch(val) [43][68/68]    coco/bbox_mAP: 0.3900  coco/bbox_mAP_50: 0.7320  coco/bbox_mAP_75: 0.3810  coco/bbox_mAP_s: 0.2390  coco/bbox_mAP_m: 0.4000  coco/bbox_mAP_l: 0.4490  data_time: 0.0182  time: 0.0645
2024/06/07 13:27:17 - mmengine - INFO - Epoch(train) [44][ 50/129]  lr: 1.0000e-06  eta: 0:03:35  time: 0.3669  data_time: 0.0165  memory: 3197  loss: nan  loss_rpn_cls: 0.0473  loss_rpn_bbox: 0.0377  loss_cls: 0.1535  acc: 95.0317  loss_bbox: nan
2024/06/07 13:27:35 - mmengine - INFO - Epoch(train) [44][100/129]  lr: 1.0000e-06  eta: 0:03:17  time: 0.3611  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0534  loss_rpn_bbox: 0.0371  loss_cls: 0.1574  acc: 92.4316  loss_bbox: nan
2024/06/07 13:27:45 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:27:49 - mmengine - INFO - Epoch(val) [44][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0241  memory: 3197  
2024/06/07 13:27:50 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:27:51 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.733 0.389 0.243 0.404 0.451
2024/06/07 13:27:51 - mmengine - INFO - Epoch(val) [44][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3890  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4040  coco/bbox_mAP_l: 0.4510  data_time: 0.0182  time: 0.0645
2024/06/07 13:28:09 - mmengine - INFO - Epoch(train) [45][ 50/129]  lr: 1.0000e-06  eta: 0:02:48  time: 0.3694  data_time: 0.0205  memory: 3197  loss: nan  loss_rpn_cls: 0.0495  loss_rpn_bbox: 0.0364  loss_cls: 0.1473  acc: 93.9209  loss_bbox: nan
2024/06/07 13:28:27 - mmengine - INFO - Epoch(train) [45][100/129]  lr: 1.0000e-06  eta: 0:02:30  time: 0.3612  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0490  loss_rpn_bbox: 0.0369  loss_cls: 0.1535  acc: 92.8223  loss_bbox: nan
2024/06/07 13:28:38 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:28:41 - mmengine - INFO - Epoch(val) [45][50/68]    eta: 0:00:01  time: 0.0708  data_time: 0.0240  memory: 3197  
2024/06/07 13:28:42 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:28:43 - mmengine - INFO - bbox_mAP_copypaste: 0.392 0.734 0.383 0.243 0.401 0.450
2024/06/07 13:28:43 - mmengine - INFO - Epoch(val) [45][68/68]    coco/bbox_mAP: 0.3920  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3830  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4010  coco/bbox_mAP_l: 0.4500  data_time: 0.0181  time: 0.0644
2024/06/07 13:29:02 - mmengine - INFO - Epoch(train) [46][ 50/129]  lr: 1.0000e-06  eta: 0:02:01  time: 0.3695  data_time: 0.0187  memory: 3197  loss: nan  loss_rpn_cls: 0.0487  loss_rpn_bbox: 0.0380  loss_cls: 0.1502  acc: 93.6523  loss_bbox: nan
2024/06/07 13:29:19 - mmengine - INFO - Epoch(train) [46][100/129]  lr: 1.0000e-06  eta: 0:01:43  time: 0.3570  data_time: 0.0102  memory: 3197  loss: nan  loss_rpn_cls: 0.0504  loss_rpn_bbox: 0.0370  loss_cls: 0.1492  acc: 93.9697  loss_bbox: nan
2024/06/07 13:29:30 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:29:33 - mmengine - INFO - Epoch(val) [46][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0244  memory: 3197  
2024/06/07 13:29:34 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:29:35 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.733 0.386 0.244 0.403 0.451
2024/06/07 13:29:35 - mmengine - INFO - Epoch(val) [46][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7330  coco/bbox_mAP_75: 0.3860  coco/bbox_mAP_s: 0.2440  coco/bbox_mAP_m: 0.4030  coco/bbox_mAP_l: 0.4510  data_time: 0.0185  time: 0.0643
2024/06/07 13:29:53 - mmengine - INFO - Epoch(train) [47][ 50/129]  lr: 1.0000e-06  eta: 0:01:15  time: 0.3649  data_time: 0.0177  memory: 3197  loss: nan  loss_rpn_cls: 0.0481  loss_rpn_bbox: 0.0374  loss_cls: 0.1492  acc: 94.9707  loss_bbox: nan
2024/06/07 13:29:59 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:30:11 - mmengine - INFO - Epoch(train) [47][100/129]  lr: 1.0000e-06  eta: 0:00:57  time: 0.3594  data_time: 0.0104  memory: 3197  loss: nan  loss_rpn_cls: 0.0506  loss_rpn_bbox: 0.0375  loss_cls: 0.1546  acc: 91.3452  loss_bbox: nan
2024/06/07 13:30:22 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:30:25 - mmengine - INFO - Epoch(val) [47][50/68]    eta: 0:00:01  time: 0.0711  data_time: 0.0245  memory: 3197  
2024/06/07 13:30:26 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:30:27 - mmengine - INFO - bbox_mAP_copypaste: 0.395 0.734 0.390 0.243 0.407 0.452
2024/06/07 13:30:27 - mmengine - INFO - Epoch(val) [47][68/68]    coco/bbox_mAP: 0.3950  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3900  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4070  coco/bbox_mAP_l: 0.4520  data_time: 0.0185  time: 0.0645
2024/06/07 13:30:45 - mmengine - INFO - Epoch(train) [48][ 50/129]  lr: 1.0000e-06  eta: 0:00:28  time: 0.3614  data_time: 0.0156  memory: 3197  loss: nan  loss_rpn_cls: 0.0493  loss_rpn_bbox: 0.0376  loss_cls: 0.1547  acc: 93.5425  loss_bbox: nan
2024/06/07 13:31:03 - mmengine - INFO - Epoch(train) [48][100/129]  lr: 1.0000e-06  eta: 0:00:10  time: 0.3552  data_time: 0.0103  memory: 3197  loss: nan  loss_rpn_cls: 0.0495  loss_rpn_bbox: 0.0371  loss_cls: 0.1509  acc: 91.8579  loss_bbox: nan
2024/06/07 13:31:13 - mmengine - INFO - Exp name: faster-renn_r101_fpn_1x_coco_20240607_124900
2024/06/07 13:31:13 - mmengine - INFO - Saving checkpoint at 48 epochs
2024/06/07 13:31:18 - mmengine - INFO - Epoch(val) [48][50/68]    eta: 0:00:01  time: 0.0709  data_time: 0.0242  memory: 3197  
2024/06/07 13:31:19 - mmengine - INFO - Evaluating bbox...
2024/06/07 13:31:20 - mmengine - INFO - bbox_mAP_copypaste: 0.394 0.734 0.389 0.243 0.404 0.452
2024/06/07 13:31:20 - mmengine - INFO - Epoch(val) [48][68/68]    coco/bbox_mAP: 0.3940  coco/bbox_mAP_50: 0.7340  coco/bbox_mAP_75: 0.3890  coco/bbox_mAP_s: 0.2430  coco/bbox_mAP_m: 0.4040  coco/bbox_mAP_l: 0.4520  data_time: 0.0183  time: 0.0644
